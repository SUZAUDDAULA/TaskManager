{"version":3,"sources":["./src/app/navbar/sidebar/sidebar.component.ts","./src/app/navbar/sidebar/sidebar.component.html","./src/app/services/dashboard.service.ts","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/services/countries.service.ts","./src/app/directives/client-location-status-validator.directive.ts","./src/app/admin/filter.pipe.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/number-to-words.pipe.ts","./src/app/admin/login/login.component.ts","./src/app/admin/login/login.component.html","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/sign-up/sign-up.component.ts","./src/app/admin/sign-up/sign-up.component.html","./src/app/services/custom-validators.service.ts","./src/app/models/project.ts","./src/environments/environment.ts","./src/app/services/projects.service.ts","./src/app/services/jwt-un-authorize-interceptor.service.ts","./src/app/services/login.service.ts","./src/app/directives/alert.directive.ts","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/directives/team-size-validator.directive.ts","./src/app/services/client-location.service.ts","./src/app/directives/project-code-unique-validator.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/login-view-model.ts","./src/app/app.module.ts","./src/app/models/client-location.ts","./src/app/services/can-active-guard.service.ts","./src/app/admin/paging.pipe.ts","./src/app/admin/admin.module.ts","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/services/jwtinterceptor.service.ts","./src/app/models/country.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCN7B,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,0EAAmB;QAAA,4DAAC;QAAA,0EAAiC;QAAA,+DAAI;QAAA,4DAAO;QAAA,4DAAO;QAC3E,4DAAI;QACJ,wEACI;QAAA,wEACI;QAAA,uEACI;QAAA,mEAA6B;QAAA,2EAAsC;QAAA,gEAAI;QAAA,4DAAO;QAClF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,yEACI;QAAA,oEAAoC;QAAA,2EAAsC;QAAA,qEAAS;QAAA,4DAAO;QAAC,4DAAI;QACvG,4DAAK;QACL,sEACI;QAAA,wEACI;QAAA,oEAA6B;QAAA,2EAAsC;QAAA,kEAAM;QAAA,4DAAO;QAAA,4DAAI;QAC5F,4DAAK;QACL,0EACI;QAAA,yEACI;QAAA,oEAAiC;QAAA,2EAAsC;QAAA,qEAAS;QAAA,4DAAO;QAC3F,4DAAI;QACJ,0EACI;QAAA,sEAAI;QAAA,yEAAkC;QAAA,0EAAc;QAAA,4DAAI;QAAA,4DAAK;QAC7D,sEAAI;QAAA,yEAAkC;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACvD,sEAAI;QAAA,yEAAkC;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QACtD,sEACI;QAAA,qEACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,yEAAkC;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC3D,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,wEACI;QAAA,oEAA4B;QAAA,2EAAsC;QAAA,oEAAQ;QAAA,4DAAO;QAAA,4DAAI;QAC7F,4DAAK;QACL,sEACI;QAAA,wEACI;QAAA,oEAA8B;QAAA,2EAAsC;QAAA,qEAAS;QAAA,4DAAO;QAAC,4DAAI;QACjG,4DAAK;QACT,4DAAK;QACL,2EACI;QAAA,yEACI;QAAA,sEACA;QAAA,4EAAsC;QAAA,+DAAG;QAAA,4DAAO;QACpD,4DAAI;QACJ,0EACI;QAAA,sEAAI;QAAA,yEAAkC;QAAA,0EAAc;QAAA,4DAAI;QAAA,4DAAK;QAC7D,sEAAI;QAAA,yEAAkC;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACvD,sEAAI;QAAA,yEAAkC;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QACtD,sEACI;QAAA,qEACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,yEAAkC;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC3D,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDpDO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA2C;;AAE3C,gBAAgB;AAChB,uBAAuB;AACvB,KAAK;AAEE,MAAM,gBAAgB;IAE3B,oBAAoB;QAElB,MAAM,iBAAiB,GAAG;YACxB,EAAC,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,EAAE,EAAE,4BAA4B,EAAE,CAAC,EAAC;YACvE,EAAC,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,EAAE,EAAE,4BAA4B,EAAE,CAAC,EAAC;YACvE,EAAC,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,EAAE,4BAA4B,EAAE,CAAC,EAAC;YACxE,EAAC,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,EAAE,4BAA4B,EAAE,CAAC,EAAC;SACzE,CAAC;QACF,OAAO,iBAAiB,CAAC;IAC3B,CAAC;;gFAXU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAA0H;;;;;;AAUnH,MAAM,gBAAgB;IAa3B,YAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QANzC,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC/B,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG3C,+CAA+C;QAC/C,gBAAW,GAAY,KAAK,CAAC;IAC0B,CAAC;IAExD,mDAAmD;IACnD,WAAW,CAAC,aAA4B;QAEtC,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC3C,iCAAiC;QACjC,KAAK,MAAM,QAAQ,IAAI,aAAa,EAAE;YACpC,MAAM,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,oBAAoB,GAAG,qBAAqB,IAAI,EAAE,CAAC,CAAC;SAC5E;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAK,EAAE,CAAC;QAElB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,CAAC;QAEpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,mDAAmD;IACnD,WAAW;QAET,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAID,kBAAkB,CAAC,CAAU;QAE3B,IAAI,CAAC,EAAC;YACJ,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;aAAI;YACH,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC7B;IACH,CAAC;;gFA7DU,gBAAgB;gGAAhB,gBAAgB;;;;;;;QCX7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAK;QAAA,uDAAwB;QAAA,4DAAM;QACnC,sEAAK;QAAA,uDAAuB;QAAA,4DAAM;QACtC,4DAAM;QACN,yEACI;QAAA,6DAAyB;QAC7B,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,0EACI;QAAA,4EACI;QAAA,sEACI;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,wDAAqB;QAAA,4DAAK;QAClC,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEACI;QAAA,wEAAM;QAAA,wDAAoB;QAAA,4DAAO;QAAA,mEACjC;QAAA,2EAAwB;QAAA,wDAA6C;;QAAA,4DAAO;QAChF,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,wDAA6C;QAAA,4DAAK;QAC1D,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,wDAAkB;QAAA,4DAAK;QAC/B,4DAAK;QACT,4DAAQ;QACZ,4DAAM;QACN,0EACI;QAIA,6EAC6C;QADhB,+IAAS,8BAAqB,IAAC;QACf,gEAAI;QAAA,4DAAS;QAAA,mEAC1D;QAAA,8EAC+C;QADf,+IAAS,gCAAuB,IAAC;QAClB,kEAAM;QAAA,4DAAS;QAClE,4DAAM;QACV,4DAAM;;QA1Ce,0DAAwB;QAAxB,kGAAwB;QACxB,0DAAuB;QAAvB,wFAAuB;QASW,0DAAsB;QAAtB,mFAAsB;QAGzD,0DAAqB;QAArB,sFAAqB;QAKf,0DAAoB;QAApB,qFAAoB;QACF,0DAA6C;QAA7C,gKAA6C;QAKrE,0DAA6C;QAA7C,8GAA6C;QAI7C,0DAAkB;QAAlB,mFAAkB;;6FDrBzB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;0HAI0B,OAAO;kBAA/B,mDAAK;mBAAC,gBAAgB;YAED,CAAC;kBAAtB,mDAAK;mBAAC,aAAa;YAEV,SAAS;kBAAlB,oDAAM;YACG,WAAW;kBAApB,oDAAM;YA6CuB,YAAY;kBAAzC,0DAAY;mBAAC,cAAc;;;;;;;;;;;;;;AEhE9B;AAAA;AAAA;AAAA;AAA8C;AACH;;AAKpC,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,YAAY;QAEV,OAAO;YACL,IAAI,uDAAO,CAAC,CAAC,EAAE,OAAO,CAAC;YACvB,IAAI,uDAAO,CAAC,CAAC,EAAE,YAAY,CAAC;YAC5B,IAAI,uDAAO,CAAC,CAAC,EAAE,IAAI,CAAC;YACpB,IAAI,uDAAO,CAAC,CAAC,EAAE,KAAK,CAAC;YACrB,IAAI,uDAAO,CAAC,CAAC,EAAE,OAAO,CAAC;YACvB,IAAI,uDAAO,CAAC,CAAC,EAAE,OAAO,CAAC;SACxB,CAAC;IACJ,CAAC;;gFAdU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA0C;AACkD;;AAMrF,MAAM,sCAAsC;IAEjD,gBAAgB,CAAC;IAEjB,QAAQ,CAAC,OAAwB;QAE7B,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,OAAO,CAAC,KAAK,CAAC,cAAc,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,EAC5E;YACE,OAAO,GAAG,KAAK,CAAC;SACjB;aAED;YACE,OAAO,EAAC,oBAAoB,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC;SAC/C;IACL,CAAC;;4HAfU,sCAAsC;sHAAtC,sCAAsC,yIAFtC,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,sCAAsC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;6FAE5F,sCAAsC;cAJlD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,wCAAwC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;aACxG;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAoD;;AAO7C,MAAM,UAAU;IAErB,SAAS,CAAC,KAAgB,EAAE,QAAgB,EAAE,UAAkB;QAE9D,IAAI,KAAK,IAAI,IAAI,EACjB;YACE,OAAO,KAAK,CAAC;SACd;QAED,wCAAwC;QACxC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,uCAAuC;QACvC,QAAQ,CAAC;QACT,wCAAwC;QACxC,KAAK,IAAI,IAAI,IAAI,KAAK,EACtB;YACE,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAC/E;gBACE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB;SACF;QAED,OAAO,WAAW,CAAC;IAErB,CAAC;;oEAxBU,UAAU;sGAAV,UAAU;6FAAV,UAAU;cAJtB,kDAAI;eAAC;gBACJ,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,KAAK;aACZ;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,wBAAwB;IAInC;QAFA,+CAA+C;QAC/C,cAAS,GAAY,KAAK,CAAC;IACX,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,KAAK;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;;gGAhBU,wBAAwB;wGAAxB,wBAAwB;QCPrC,sEACI;QAAA,2EACJ;QADwE,+LAAuB;QAA3F,4DACJ;QAAA,4DAAM;;QADkE,0DAAuB;QAAvB,kFAAuB;;6FDMlF,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAH9B;QAaU,YAAO,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE;YAEjC,MAAM,CAAC,GAAG;gBACR,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;gBACjC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;gBACvC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU;gBACjD,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU;aAC1D,CAAC;YAEF,MAAM,CAAC,GAAG;gBACR,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;gBACnC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ;aAChD,CAAC;YAEF,MAAM,CAAC,GAAG;gBACR,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa;gBAC/D,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW;aACpE,CAAC;YAEF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;YACtC,gDAAgD;YAChD,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvC,gDAAgD;YAChD,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAC5C,gDAAgD;YAChD,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpB,gDAAgD;YAChD,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACtB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAE7D,wCAAwC;YACxC,IAAI,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;gBAErC,OAAO;oBACL,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW;oBAC5C,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE;oBAC1D,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;iBAC1B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACb,CAAC,CAAC;YAEF,wCAAwC;YACxC,IAAI,QAAQ,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEvE,iCAAiC;YACjC,IAAI,OAAO,CAAC,KAAK,QAAQ;gBACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACzC,iCAAiC;iBAC5B,IAAI,CAAC,KAAK,GAAG;gBAChB,OAAO,MAAM,CAAC;YAChB,iCAAiC;;gBAE/B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACnC,GAAG,CAAC,SAAS,CAAC;qBACd,GAAG,CAAC,QAAQ,CAAC;qBACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;qBAC1B,OAAO,EAAE;qBACT,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC;KAEF;IAxEC,SAAS,CAAC,KAAU,EAAE,SAAkB;QACtC,IAAI,KAAK,IAAI,IAAI,EAAC;YAChB,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACvC;IACH,CAAC;;kFARU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACf;;;;;;;;ICI9B,qEAA4D;;;IAA9C,oFAAoB;;ADI/C,MAAM,cAAc;IAIzB,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHxE,mBAAc,GAAmB,IAAI,uEAAc,EAAE,CAAC;QACtD,eAAU,GAAG,EAAE,CAAC;IAId,CAAC;IAED,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAK;QAEhB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACpD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,8BAA8B,CAAC;QACnD,CAAC,CACF,CAAC;IACJ,CAAC;;4EAtBU,cAAc;8FAAd,cAAc;QCV3B,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,0GAA4D;QAChE,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EAAsD;QAAA,oEAAQ;QAAA,4DAAQ;QACtE,0EACI;QAAA,4EAEJ;QAFmE,oMAAqC;QAApG,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,6EAAsD;QAAA,oEAAQ;QAAA,4DAAQ;QACtE,0EACI;QAAA,6EAEJ;QAFuE,oMAAqC;QAAxG,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QACA,8EAA+D;QAA/B,6IAAS,wBAAoB,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACjF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAzBiD,0DAAgB;QAAhB,gFAAgB;QAMmB,0DAAqC;QAArC,gGAAqC;QAOjC,0DAAqC;QAArC,gGAAqC;;6FDTvH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDON,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACqD;;;;;;;;;ICa/E,2EAEI;IAAA,sFACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,4GACJ;IAAA,4DAAO;;;IAcP,2EAEI;IAAA,qFACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,4GACJ;IAAA,4DAAO;;;IAcP,2EAEI;IAAA,iFACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,6EACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,gFACJ;IAAA,4DAAO;;;IAeP,2EAEI;IAAA,kFACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,8EACJ;IAAA,4DAAO;;;IAcH,2EAEI;IAAA,yFACJ;IAAA,4DAAO;;;IAEP,2EAEI;IAAA,mFACJ;IAAA,4DAAO;;;IAcP,2EAEI;IAAA,oFACJ;IAAA,4DAAO;;;IAeP,2EAEI;IAAA,4FACJ;IAAA,4DAAO;;;IAEP,2EAEG;IAAA,uGACH;IAAA,4DAAO;;;IASP,0EACI;IAAA,uEACA;IAAA,4EAA+C;IAAA,uDAAU;IAAA,4DAAQ;IACrE,4DAAM;;;IAFgC,0DAAa;IAAb,0EAAa;IACxC,0DAAc;IAAd,2EAAc;IAA0B,0DAAU;IAAV,2EAAU;;;IAE7D,2EAEI;IAAA,iFACJ;IAAA,4DAAO;;;IAaH,6EAAsE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA5D,wFAA2B;IAAC,0DAAuB;IAAvB,wFAAuB;;;IAGjG,2EAEI;IAAA,kFACJ;IAAA,4DAAO;;;;;IAeP,0EACI;IAAA,0EACI;IAAA,uEAMJ;IAAA,4DAAM;IACN,0EACI;IAAA,6EAII;IAAA,6EAAqB;IAAA,wEAAa;IAAA,4DAAS;IAC3C,6EAAyB;IAAA,mEAAQ;IAAA,4DAAS;IAC1C,6EAA6B;IAAA,wEAAY;IAAA,4DAAS;IAClD,8EAA6B;IAAA,wEAAY;IAAA,4DAAS;IAClD,8EAAuB;IAAA,kEAAM;IAAA,4DAAS;IAC1C,4DAAS;IACb,4DAAM;IAEN,2EACI;IAAA,8EAA+E;IAA3B,0VAA0B;IAAC,kEAAM;IAAA,4DAAS;IAClG,4DAAM;IAEV,4DAAM;;;;;IA1BqF,gFAAmB;IAGrD,0DAI0B;IAJ1B,kZAI0B;IAGT,0DAGyC;IAHzC,0XAGyC;;ADlNxI,MAAM,eAAe;IAQ1B,YAAoB,gBAAkC,EAAU,WAAwB,EAAU,MAAc,EAC5F,uBAAgD,EAAU,YAA0B;QADpF,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC5F,4BAAuB,GAAvB,uBAAuB,CAAyB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QANxG,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC7B,cAAS,GAAc,EAAE,CAAC;QAC1B,kBAAa,GAAW,IAAI,CAAC;IAK7B,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACjE,CAAC;YACF,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,EAAE,CAAE,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC;YACrI,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACzE,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;YAChG,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,eAAe,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,kBAAkB,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACnC,EAAE;YACD,UAAU,EAAE;gBACV,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,UAAU,CAAC;aAC7E;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;QAEjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QAEX,6CAA6C;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAC;YACxB,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,KAAwB,CAAC;YACjE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,SAAS,CACnD,CAAC,QAAQ,EAAE,EAAE;gBACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC;YAC1C,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,UAAU;QAER,MAAM,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC9B,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAChC,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC7B,CAAC,CAAC;QAEH,2DAA2D;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED,aAAa,CAAC,KAAa;QAEzB,2DAA2D;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC;;8EA5EU,eAAe;+FAAf,eAAe;QCd5B,yEACI;QAAA,yEACI;QAAA,0EACA;QAD+B,2IAAY,mBAAe,IAAC;QAC3D,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QACpB,4DAAM;QAEN,yEAEQ;QAAA,yEACI;QAAA,2EAAuD;QAAA,sEAAU;QAAA,4DAAQ;QACzE,0EACI;QAAA,uEAMJ;QAAA,gHAGO;QAEP,gHAGO;QACX,4DAAM;QACN,4DAAM;QAEN,0EACI;QAAA,6EAAsD;QAAA,qEAAS;QAAA,4DAAQ;QACvE,0EACI;QAAA,wEAOJ;QAAA,gHAGO;QAEP,gHAGO;QACX,4DAAM;QACN,4DAAM;QAEN,2EACI;QAAA,6EAAmD;QAAA,iEAAK;QAAA,4DAAQ;QAChE,0EACI;QAAA,wEAOJ;QAAA,gHAGO;QAEP,gHAGO;QAEP,gHAGO;QAEX,4DAAM;QACN,4DAAM;QAEN,2EACI;QAAA,6EAAoD;QAAA,kEAAM;QAAA,4DAAQ;QAClE,0EACI;QAAA,wEAOJ;QAAA,gHAGO;QAEP,gHAGO;QACX,4DAAM;QACN,4DAAM;QAEN,2EACI;QAAA,6EAAyD;QAAA,yEAAa;QAAA,4DAAQ;QAC9E,0EACI;QAAA,wEAOA;QAAA,gHAGO;QAEP,gHAGO;QACX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAyD;QAAA,oEAAQ;QAAA,4DAAQ;QACzE,0EACI;QAAA,wEAOA;QAAA,gHAGO;QAEX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAyD;QAAA,4EAAgB;QAAA,4DAAQ;QACjF,0EACI;QAAA,wEAOA;QAAA,gHAGO;QAEP,gHAGO;QAEX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAuC;QAAA,kEAAM;QAAA,4DAAQ;QACrD,0EAEI;QAAA,8GAGM;QACN,gHAGO;QACX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAyD;QAAA,mEAAO;QAAA,4DAAQ;QACxE,0EACI;QAAA,8EAKI;QAAA,8EAAqB;QAAA,yEAAa;QAAA,4DAAS;QAC3C,oHAAsG;QAC1G,4DAAS;QAET,gHAGO;QACX,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,wEAAiE;QACjE,0EACI;QAAA,wEAEA;QAAA,6EAAyD;QAAA,gFAAoB;QAAA,4DAAQ;QACzF,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EAAuC;QAAA,kEAAM;QAAA,4DAAQ;QACrD,2EACI;QAAA,+GA0BM;QACN,8EACI;QAD0C,wIAAS,gBAAY,IAAC;QAChE,uEACJ;QAAA,4DAAS;QACT,2EAAyB;QAAA,wDAAiB;QAAA,4DAAM;QACpD,4DAAM;QAGV,4DAAM;QAGV,wDACJ;;QAAA,4DAAM;QACN,2EACI;QAAA,8EACI;QAAA,4EACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAO;QACP,4DAAM;QACV,4DAAM;;QAhQQ,0DAAwB;QAAxB,qFAAwB;QAWmH,2DAIlB;QAJkB,2eAIlB;QAEpF,0DAC4F;QAD5F,oXAC4F;QAI5F,0DAC6F;QAD7F,qXAC6F;QAUzF,0DAI8E;QAJ9E,qeAI8E;QAElF,0DAC0F;QAD1F,+WAC0F;QAI1F,0DAC2F;QAD3F,iXAC2F;QAU1F,0DAIqD;QAJrD,iZAIqD;QAEtD,0DAC8D;QAD9D,ySAC8D;QAI9D,0DAC2D;QAD3D,sSAC2D;QAI3D,0DACiE;QADjE,4SACiE;QAW/D,0DAIsD;QAJtD,uZAIsD;QAExD,0DACgE;QADhE,8SACgE;QAIhE,0DAC+D;QAD/D,4SAC+D;QAUxD,0DAI+D;QAJ/D,qbAI+D;QAElE,0DAC0E;QAD1E,uUAC0E;QAI1E,0DACwE;QADxE,qUACwE;QAUxE,0DAI4D;QAJ5D,maAI4D;QAE5D,0DACoE;QADpE,wTACoE;QAW7D,0DAImE;QAJnE,6cAImE;QAE1E,0DACkF;QADlF,2VACkF;QAIlF,0DAC4C;QAD5C,gPAC4C;QAWJ,0DAAU;QAAV,gFAAU;QAIlD,0DACgE;QADhE,8SACgE;QASF,0DAIJ;QAJI,yaAIJ;QAErD,0DAAY;QAAZ,kFAAY;QAGjB,0DACsE;QADtE,6TACsE;QAiB9D,2DAAyC;QAAzC,6GAAyC;QA8BnD,0DAAiB;QAAjB,kFAAiB;QAOtD,0DACJ;QADI,mKACJ;;6FD3OC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAqC;AAEM;;;AAOpC,MAAM,uBAAuB;IAElC,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAE5C,mBAAmB,CAAC,MAAc;QAEvC,OAAO,CAAC,OAAwB,EAA2B,EAAE;YAC3D,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;gBACjB,OAAO,IAAI,CAAC;aACb;YAED,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5C,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3E,MAAM,SAAS,GAAG,CAAC,gBAAgB,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;YAEtE,IAAI,SAAS,IAAI,MAAM,EAAC;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAK;gBACJ,OAAO,EAAC,MAAM,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC;aACjC;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,gBAAgB,CAAC,iBAAyB,EAAE,gBAAwB;QAEzE,OAAO,CAAC,SAAoB,EAA2B,EAAE;YAEvD,MAAM,OAAO,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAC;gBAC1C,OAAO,IAAI,CAAC;aACb;YAED,IAAI,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAC;gBACnF,OAAO,IAAI,CAAC;aACb;iBAAK;gBACJ,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC;oBACzC,gBAAgB,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC;iBACjC,CAAC,CAAC;gBACH,OAAO,EAAC,gBAAgB,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC;aAC3C;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,uBAAuB;QAG5B,OAAO,CAAC,OAAwB,EAAuC,EAAE;YAEvE,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,YAAiB,EAAE,EAAE;gBAEpF,IAAI,YAAY,IAAI,IAAI,EACxB;oBACE,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;iBAC1C;qBAED;oBACE,OAAO,IAAI,CAAC;iBACb;YACH,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC;IAEJ,CAAC;;8FA9DU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAmD;AAC5C,MAAM,OAAO;IAWhB;QACI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,+DAAc,EAAE,CAAC;IAC/C,CAAC;CACJ;;;;;;;;;;;;;ACvBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACgB;AAEiB;;;AAM/D,MAAM,eAAe;IAG1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAExC,IAAI,CAAC,SAAS,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IACvD,CAAC;IACD,mCAAmC;IACnC,aAAa;QAEX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc;QAEX,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,yBAAyB,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;aACvF,IAAI,CAAC,0DAAG,CACP,CAAC,IAAe,EAAE,EAAE;YAClB,OAAO,IAAI,CAAC;QACd,CAAC,CACF,CAAC,CAAC;QACJ,mGAAmG;IACrG,CAAC;IAED,aAAa,CAAC,UAAmB;QAE9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,6BAA6B,EAAE,UAAU,CAAC,CAAC;QACjF,8GAA8G;IAChH,CAAC;IAED,aAAa,CAAC,YAAqB;QAEhC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,8BAA8B,EAAE,YAAY,CAAC,CAAC;QACnF,+GAA+G;IACjH,CAAC;IAED,aAAa,CAAC,SAAiB;QAE5B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,gCAAgC,GAAG,SAAS,CAAC,CAAC;QACrF,mHAAmH;IACrH,CAAC;IAED,cAAc,CAAC,QAAgB,EAAE,UAAkB;QAEhD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,wBAAwB,GAAG,QAAQ,GAAG,GAAG,GAAG,UAAU,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;QACvH,kIAAkI;IACpI,CAAC;IAED,uBAAuB,CAAC,WAAmB;QAEzC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,oCAAoC,GAAG,WAAW,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAClH,CAAC;;8EAnDU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA6H;AAClF;AAEN;;AAK9B,MAAM,gCAAgC;IAE3C,gBAAgB,CAAC;IACjB,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAG,CAC9B,CAAC,KAAqB,EAAE,EAAE;YAExB,IAAI,KAAK,YAAY,iEAAY,EAAC;aAEjC;QACH,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,KAAK,YAAY,sEAAiB,EAAC;gBACrC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,KAAK,CAAC,kBAAkB,CAAC,CAAC;iBAC3B;aACF;QACH,CAAC,CACF,CAAC,CAAC;IACP,CAAC;;gHApBU,gCAAgC;mHAAhC,gCAAgC,WAAhC,gCAAgC,mBAF/B,MAAM;6FAEP,gCAAgC;cAH5C,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACpB;AAER;;;;AAM5B,MAAM,YAAY;IAGvB,YAAoB,WAAwB,EAAU,gBAAkC;QAApE,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAKxF,oBAAe,GAAW,IAAI,CAAC;IAF/B,CAAC;IAIM,KAAK,CAAC,cAA8B;QAEzC,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,oBAAoB,EAAE,cAAc,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;aAC7F,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,IAAI,EAAC;gBACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC9C,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzD;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAEM,QAAQ,CAAC,eAAgC;QAE9C,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,uBAAuB,EAAE,eAAe,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC;aACjG,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,IAAI,EAAC;gBACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC9C,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,4EAA4E;aAC7E;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,KAAa;QAE1B,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,oCAAoC,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;QACxG,yGAAyG;IAC3G,CAAC;IAEM,MAAM;QAEX,IAAI,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,qBAAqB,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC1F,CAAC;IAEM,eAAe;QAEpB,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/G,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,EAC1C;YACE,OAAO,KAAK,CAAC;SACd;aAAI;YACH,OAAO,IAAI,CAAC;SACb;IACH,CAAC;;wEA7DU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAwF;;AAKjF,MAAM,cAAc;IAMzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAE1C,CAAC;IAED,mDAAmD;IACnD,QAAQ;QAEN,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,GAAG;;cAEhC,IAAI,CAAC,KAAK;;KAEnB,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC;IAClC,CAAC;IAEuC,YAAY,CAAC,KAAK;QAExD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC;IACvF,CAAC;IAEuC,YAAY,CAAC,KAAK;QAExD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;IACrF,CAAC;;4EA7BU,cAAc;8FAAd,cAAc;sJAAd,wBAEX,0FAFW,wBAEX;;;;6FAFW,cAAc;cAH1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;aACvB;wGAIiB,KAAK;kBAApB,mDAAK;mBAAC,OAAO;YACQ,KAAK;kBAA1B,yDAAW;mBAAC,OAAO;YAiBoB,YAAY;kBAAnD,0DAAY;mBAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;YAKE,YAAY;kBAAnD,0DAAY;mBAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AC3BxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AACjD;AAErB;AACgB;;;;;;;;;;;;;;;;;;ICNxC,oEAAyF;;;;IA8CjF,2EACI;IAAA,mFAEA;IADA,qXAAmC;IACnC,8FAA6D;IAC7D,4DAAc;IAClB,4DAAM;;;;IAJW,0DAA0B;IAA1B,uFAA0B;;;;;IAY3C,0EAEI;IAF6C,+WAA4C;IAEzF,yEAA+C;IAAA,uDAAsB;IAAA,4DAAI;IAC7E,4DAAK;;;;IAFL,yLAA0D;IACP,0DAAsB;IAAtB,uFAAsB;;;IAwB7D,4EAA6J;IAAA,sFAA2B;IAAA,4DAAO;;;IAC/L,4EAA4J;IAAA,kGAAuC;IAAA,4DAAO;;;IAC1M,4EAAsK;IAAA,gFAAqB;IAAA,4DAAO;;;IAWlM,4EAAqK;IAAA,sFAA2B;IAAA,4DAAO;;;IACvM,4EAAoK;IAAA,6HAAkE;IAAA,4DAAO;;;IAC7O,4EAAsK;IAAA,4GAAiD;IAAA,4DAAO;;;IAW9N,4EAA6J;IAAA,oFAAyB;IAAA,4DAAO;;;IAW7L,4EAA0J;IAAA,uFAA4B;IAAA,4DAAO;;;IAC7L,4EAA0J;IAAA,+FAAoC;IAAA,4DAAO;;;IA8BjM,4EAA6K;IAAA,+EAAoB;IAAA,4DAAO;;;IAWpM,8EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAFsD,wFAA2B;IACtF,0DACJ;IADI,iHACJ;;;IAGJ,4EAAyL;IAAA,iFAAsB;IAAA,4DAAO;;;IACtN,4EAAqJ;IAAA,yGAA8C;IAAA,4DAAO;;;IA+B1M,4EAAkK;IAAA,sFAA2B;IAAA,4DAAO;;;IACpM,4EAAiK;IAAA,kGAAuC;IAAA,4DAAO;;;IAC/M,4EAA2K;IAAA,gFAAqB;IAAA,4DAAO;;;IAUvM,4EAA0K;IAAA,sFAA2B;IAAA,4DAAO;;;IAC5M,4EAAyK;IAAA,6HAAkE;IAAA,4DAAO;;;IAClP,4EAA2K;IAAA,4GAAiD;IAAA,4DAAO;;;IAUvO,4EAAkK;IAAA,oFAAyB;IAAA,4DAAO;;;IAUlM,4EAA+J;IAAA,uFAA4B;IAAA,4DAAO;;;IAClM,4EAA0J;IAAA,+FAAoC;IAAA,4DAAO;;;IA6BjM,4EAAkL;IAAA,+EAAoB;IAAA,4DAAO;;;IAWzM,8EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAFsD,wFAA2B;IACtF,0DACJ;IADI,iHACJ;;;IAGJ,4EAA8L;IAAA,iFAAsB;IAAA,4DAAO;;;IAC3N,4EAA0J;IAAA,yGAA8C;IAAA,4DAAO;;;AD5QpO,MAAM,iBAAiB;IAsB5B,YAAoB,cAA+B,EAAU,qBAA4C;QAArF,mBAAc,GAAd,cAAc,CAAiB;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QAnBzG,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAY,IAAI,8DAAO,EAAE,CAAC;QACpC,gBAAW,GAAY,IAAI,8DAAO,EAAE,CAAC;QACrC,kBAAa,GAAY,IAAI,8DAAO,EAAE,CAAC;QACvC,cAAS,GAAW,IAAI,CAAC;QACzB,gBAAW,GAAW,IAAI,CAAC;QAC3B,aAAQ,GAAG,aAAa,CAAC;QACzB,eAAU,GAAG,EAAE,CAAC;QAEhB,+CAA+C;QAC/C,qBAAgB,GAAW,CAAC,CAAC;QAC7B,UAAK,GAAU,EAAE,CAAC;QAClB,+CAA+C;QAC/C,aAAQ,GAAW,CAAC,CAAC;QACrB,+CAA+C;QAC/C,iBAAY,GAAY,KAAK,CAAC;IAK5B,CAAC;IAEH,QAAQ;QAEN,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAC5C,CAAC,QAAmB,EAAE,EAAE;YACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAChC,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC;QACvE,6DAA6D;QAC7D,oBAAoB;QACpB,uCAAuC;QACvC,MAAM;QACN,KAAK;IACP,CAAC;IAED,kBAAkB;QAEhB,wCAAwC;QACxC,IAAI,UAAU,GAAG,IAAI,uDAAU,EAAE,CAAC;QAClC,MAAM,cAAc,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3F,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAClC;YACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;IAC5B,CAAC;IAKD,kBAAkB,CAAC,KAAK;QAEtB,wCAAwC;QACxC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAChC,yCAAyC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACpC;YACE,IAAI,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/C;IACH,CAAC;IAID,UAAU,CAAC,KAAK;QAEd,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACnC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EACtB;YACE,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACxE,MAAM,CAAC,GAAY,IAAI,8DAAO,EAAE,CAAC;gBACjC,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;gBACnB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACrC,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACrC,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;gBACjC,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC/B,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC/B,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAC3B,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;gBAC/C,CAAC,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAE3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAExC,mCAAC,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,WAAW,CAAC,KAAK,EAAE,KAAa;QAE9B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC;QAC1E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,aAAa;QAEX,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EACvB;YACE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE;gBAElF,MAAM,CAAC,GAAY,IAAI,8DAAO,EAAE,CAAC;gBACjC,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;gBACnB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACrC,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;gBACjC,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC/B,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACrC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBAC3B,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC/B,CAAC,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAEzC,mCAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC,EACA,CAAC,KAAK,EAAE,EAAE;gBAET,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACL;IACH,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,KAAa;QAEhC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;QAC9D,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;IAC9D,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAChE,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YAEnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QAEX,gFAAgF;QAChF,+BAA+B;QAC/B,gCAAgC;QAChC,OAAO;QACP,aAAa;QACb,IAAI;QACJ,wBAAwB;QACxB,MAAM;IACR,CAAC;IAED,iBAAiB,CAAC,KAAK;QAErB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,mCAAmC;IACnC,iBAAiB,CAAC,KAAK;QAErB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,mCAAmC;IACnC,SAAS;QAEP,OAAO,KAAK,CAAC;IACf,CAAC;IAED,kBAAkB,CAAC,SAAiB;QAElC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACpC,CAAC;;kFAnOU,iBAAiB;iGAAjB,iBAAiB;;;;;;;;;;;;QChB9B,qEACI;QAAA,yEACA;QAAA,yGAAyF;QAC7F,4DAAK;QACL,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,4EAAyG;QAA7B,+IAAS,sBAAkB,IAAC;QAAC,yEAAc;QAAA,4DAAS;QACpI,4DAAM;QACN,yEACI;QAAA,6EAAsE;QAApC,gJAAS,6BAAyB,IAAC;QAAC,6EAAiB;QAAA,4DAAS;QACpG,4DAAM;QACN,0EACI;QAAA,4EACA;QAD0E,4LAA0B,yFAAwC,8BAA0B,IAAlE;QAApG,4DACA;QAAA,uEAA+D;QACnE,4DAAM;QAEN,6EAAsD;QAAA,qEAAS;QAAA,4DAAQ;QACvE,0EACI;QAAA,8EACI;QAD0D,yLAAsB;QAChF,8EAA4B;QAAA,wEAAY;QAAA,4DAAS;QACjD,8EAA4B;QAAA,wEAAY;QAAA,4DAAS;QACjD,8EAA0B;QAAA,sEAAU;QAAA,4DAAS;QAC7C,8EAAyB;QAAA,qEAAS;QAAA,4DAAS;QAC/C,4DAAS;QACb,4DAAM;QAGN,6EAAwD;QAAA,mEAAO;QAAA,4DAAQ;QAEvE,2EACI;QAAA,2EACI;QAAA,6EACA;QAD6E,0LAAwB,uFAAU,6BAAyB,IAAnC;QAArG,4DACA;QAGJ,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,sEAAiC;QACrC,4DAAM;QAIN,2EACI;QAAA,0EACI;QAAA,gHAKM;;;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,0EACI;QAAA,8GAGK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QAEN,gFACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EAAyB;QAAA,uEAAW;QAAA,4DAAM;QAC1C,8EAAyD;QAAA,wEAAM;QAAA,kEAAO;QAAA,4DAAO;QAAA,4DAAS;QAC1F,4DAAM;QACN,2EAEI;QAAA,2EACI;QAAA,6EAAgD;QAAA,wEAAY;QAAA,4DAAQ;QACpE,2EACI;QAAA,6EACA;QAD0C,6LAA2B;QAArE,4DACA;QAAA,iFAIJ;QAJW,sMAAoC;QAA3C,4DAIJ;QAAA,kHAA+L;QAC/L,kHAA0M;QAC1M,kHAAkM;QAClM,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAgD;QAAA,wEAAY;QAAA,4DAAQ;QACpE,2EACI;QAAA,iFAIJ;QAJW,sMAAoC;QAA3C,4DAIJ;QAAA,kHAAuM;QACvM,kHAA6O;QAC7O,kHAA8N;QAClO,4DAAM;QACN,4DAAM;QAEN,2EACI;QAAA,6EAA8C;QAAA,yEAAa;QAAA,4DAAQ;QACnE,2EACI;QAAA,iFAIJ;QAJW,oMAAkC;QAAzC,4DAIJ;QAAA,kHAA6L;QAC7L,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAA0C;QAAA,qEAAS;QAAA,4DAAQ;QAC3D,2EACI;QAAA,iFAIJ;QAJW,mMAAiC;QAAxC,4DAIJ;QAAA,kHAA6L;QAC7L,kHAAqM;QACrM,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,wEAA+C;QAC/C,2EACI;QAAA,2EACI;QAAA,6EACA;QAD+F,mMAAiC;QAAhI,4DACA;QAAA,6EAAmD;QAAA,kEAAM;QAAA,4DAAQ;QACrE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAuC;QAAA,kEAAM;QAAA,4DAAQ;QACrD,2EAEI;QAAA,4EACI;QAAA,kFAEA;QAFoG,kMAA+B;QAAnI,4DAEA;QAAA,8EAAyD;QAAA,qEAAQ;QAAA,4DAAQ;QAC7E,4DAAM;QAEN,4EACI;QAAA,kFAEA;QAFmG,kMAA+B;QAAlI,4DAEA;QAAA,8EAAyD;QAAA,oEAAO;QAAA,4DAAQ;QAC5E,4DAAM;QAEN,oHAAwM;QAC5M,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,8EAA8C;QAAA,4EAAe;QAAA,4DAAQ;QACrE,4EACI;QAAA,mFAGI;QAHyE,6MAAyC;QAGlH,2EAAQ;QAAA,0EAAa;QAAA,4DAAS;QAC9B,wHAES;;QACb,4DAAS;QAET,oHAAsN;QACtN,oHAA0M;QAC9M,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,4EACI;QAAA,+EAAwE;QAAA,mEAAM;QAAA,4DAAS;QACvF,+EAA6E;QAAxB,2IAAS,iBAAa,IAAC;QAAC,iEAAI;QAAA,4DAAS;QAC9F,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEP,iFACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EAAyB;QAAA,yEAAY;QAAA,4DAAM;QAC3C,+EAAyD;QAAA,yEAAM;QAAA,mEAAO;QAAA,4DAAO;QAAA,4DAAS;QAC1F,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EAAiD;QAAA,yEAAY;QAAA,4DAAQ;QACrE,4EACI;QAAA,8EACA;QAD2C,+LAA4B;QAAvE,4DACA;QAAA,kFAIA;QAJO,wMAAqC;QAA5C,4DAIA;QAAA,oHAAoM;QACpM,oHAA+M;QAC/M,oHAAuM;QAC3M,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,8EAAiD;QAAA,yEAAY;QAAA,4DAAQ;QACrE,4EACI;QAAA,kFAIA;QAJO,wMAAqC;QAA5C,4DAIA;QAAA,oHAA4M;QAC5M,oHAAkP;QAClP,oHAAmO;QACvO,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,8EAA+C;QAAA,0EAAa;QAAA,4DAAQ;QACpE,4EACI;QAAA,kFAIJ;QAJW,sMAAmC;QAA1C,4DAIJ;QAAA,oHAAkM;QAClM,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,8EAA8C;QAAA,sEAAS;QAAA,4DAAQ;QAC/D,4EACI;QAAA,kFAIJ;QAJW,qMAAkC;QAAzC,4DAIJ;QAAA,oHAAkM;QAClM,oHAAqM;QACzM,4DAAM;QACN,4DAAM;QAEN,4EACI;QAAA,yEAA+C;QAC/C,4EACI;QAAA,4EACI;QAAA,8EACA;QADgG,qMAAkC;QAAlI,4DACA;QAAA,8EAAoD;QAAA,mEAAM;QAAA,4DAAQ;QACtE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,8EAAuC;QAAA,mEAAM;QAAA,4DAAQ;QACrD,4EAEI;QAAA,4EACI;QAAA,kFAEA;QAFqG,mMAAgC;QAArI,4DAEA;QAAA,8EAA0D;QAAA,qEAAQ;QAAA,4DAAQ;QAC9E,4DAAM;QAEN,4EACI;QAAA,kFAEA;QAFoG,mMAAgC;QAApI,4DAEA;QAAA,8EAA0D;QAAA,oEAAO;QAAA,4DAAQ;QAC7E,4DAAM;QACN,oHAA6M;QACjN,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,8EAA8C;QAAA,4EAAe;QAAA,4DAAQ;QACrE,4EACI;QAAA,mFAGI;QAH0E,8MAA0C;QAGpH,2EAAQ;QAAA,0EAAa;QAAA,4DAAS;QAC9B,wHAES;;QACb,4DAAS;QAET,oHAA2N;QAC3N,oHAA+M;QACnN,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,4EACI;QAAA,+EAAyE;QAAA,mEAAM;QAAA,4DAAS;QACxF,+EAA+E;QAA1B,2IAAS,mBAAe,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEP,yEACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EAAyB;QAAA,2EAAc;QAAA,4DAAM;QAC7C,+EAAyD;QAAA,yEAAM;QAAA,mEAAO;QAAA,4DAAO;QAAA,4DAAS;QAC1F,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EAAgD;QAAA,yEAAY;QAAA,4DAAQ;QACpE,4EACI;QAAA,8EACA;QAD0C,iMAA8B;QAAxE,4DACA;QAAA,+EACJ;QADW,0MAAuC;QAA9C,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,+EAAgD;QAAA,yEAAY;QAAA,4DAAQ;QACpE,4EACI;QAAA,+EACJ;QADW,0MAAuC;QAA9C,4DACJ;QAAA,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,4EACI;QAAA,gFAAqD;QAAA,mEAAM;QAAA,4DAAS;QACpE,+EAAsF;QAAjC,2IAAS,0BAAsB,IAAC;QAAC,mEAAM;QAAA,4DAAS;QACzG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;;;;;;;;;;;;;;;QAvU+D,0DAAiB;QAAjB,iFAAiB;QAYG,2DAA0B;QAA1B,qFAA0B;QAMtC,0DAAsB;QAAtB,iFAAsB;QAaH,2DAAwB;QAAxB,mFAAwB;QAelD,0DAAkF;QAAlF,yRAAkF;QAatG,0DAAQ;QAAR,8EAAQ;QAqBW,2DAA2B;QAA3B,sFAA2B;QAC9D,0DAAoC;QAApC,+FAAoC;QAIpB,0DAAgI;QAAhI,iLAAgI;QAChI,0DAA+H;QAA/H,gLAA+H;QAC/H,0DAAyI;QAAzI,0LAAyI;QAOzJ,0DAAoC;QAApC,+FAAoC;QAIpB,0DAAwI;QAAxI,iLAAwI;QACxI,0DAAuI;QAAvI,gLAAuI;QACvI,0DAAyI;QAAzI,kLAAyI;QAOzJ,0DAAkC;QAAlC,6FAAkC;QAIlB,0DAAgI;QAAhI,sLAAgI;QAOhJ,0DAAiC;QAAjC,4FAAiC;QAIjB,0DAA6H;QAA7H,uLAA6H;QAC7H,0DAA6H;QAA7H,uLAA6H;QAQjD,0DAAiC;QAAjC,4FAAiC;QAW5B,0DAA+B;QAA/B,0FAA+B;QAMhC,0DAA+B;QAA/B,0FAA+B;QAK3G,0DAAgJ;QAAhJ,sLAAgJ;QAO9F,0DAAyC;QAAzC,oGAAyC;QAI/E,0DAA0B;QAA1B,4JAA0B;QAKtC,0DAA4J;QAA5J,sLAA4J;QAC5J,0DAAwH;QAAxH,6LAAwH;QA0BxG,2DAA4B;QAA5B,uFAA4B;QAChE,0DAAqC;QAArC,gGAAqC;QAIjB,0DAAqI;QAArI,uLAAqI;QACrI,0DAAoI;QAApI,sLAAoI;QACpI,0DAA8I;QAA9I,gMAA8I;QAMlK,0DAAqC;QAArC,gGAAqC;QAIjB,0DAA6I;QAA7I,uLAA6I;QAC7I,0DAA4I;QAA5I,sLAA4I;QAC5I,0DAA8I;QAA9I,wLAA8I;QAMlK,0DAAmC;QAAnC,8FAAmC;QAInB,0DAAqI;QAArI,uLAAqI;QAMrJ,0DAAkC;QAAlC,6FAAkC;QAIlB,0DAAkI;QAAlI,wLAAkI;QAClI,0DAA6H;QAA7H,uLAA6H;QAQhD,0DAAkC;QAAlC,6FAAkC;QAW7B,0DAAgC;QAAhC,2FAAgC;QAMjC,0DAAgC;QAAhC,2FAAgC;QAI7G,0DAAqJ;QAArJ,uLAAqJ;QAOlG,0DAA0C;QAA1C,qGAA0C;QAIjF,0DAA0B;QAA1B,4JAA0B;QAKtC,0DAAiK;QAAjK,uLAAiK;QACjK,0DAA6H;QAA7H,mMAA6H;QA0B9G,2DAA8B;QAA9B,yFAA8B;QACjE,0DAAuC;QAAvC,kGAAuC;QAMvC,0DAAuC;QAAvC,kGAAuC;;6FD7S7D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;6NAqBuB,OAAO;kBAA5B,uDAAS;mBAAC,SAAS;YACG,QAAQ;kBAA9B,uDAAS;mBAAC,UAAU;YA2CE,KAAK;kBAA3B,0DAAY;mBAAC,OAAO;YAcD,KAAK;kBAAxB,uDAAS;mBAAC,OAAO;;;;;;;;;;;;;;AE9FpB;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDON,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAiD;AAC4C;;AAMtF,MAAM,0BAA0B;IAErC,gBAAgB,CAAC;IAGjB,QAAQ,CAAC,OAAwB;QAE7B,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;QACnC,MAAM,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,OAAO,EACX;YACE,OAAO,IAAI,CAAC;SACb;aACG;YACF,OAAO,EAAC,SAAS,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC;SACpC;IACL,CAAC;;oGAjBU,0BAA0B;0GAA1B,0BAA0B,2KAF1B,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,0BAA0B,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;6FAEhF,0BAA0B;cAJtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,4BAA4B,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;aAC5F;sCAKgC,CAAC;kBAA/B,mDAAK;mBAAC,sBAAsB;;;;;;;;;;;;;;ACT/B;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,qBAAqB;IAEhC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,kBAAkB;QAEhB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,wCAAwC,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACjH,CAAC;;0FAPU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACK;AAC8D;;;AAQjG,MAAM,mCAAmC;IAE9C,YAAoB,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;IAAI,CAAC;IAExD,QAAQ,CAAC,OAAwB;QAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,eAAwB,EAAE,EAAE;YACtG,IAAI,eAAe,IAAI,IAAI,EAAC;gBAC1B,OAAO,EAAC,iBAAiB,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC;aAC5C;iBAAK;gBACJ,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;sHAZU,mCAAmC;mHAAnC,mCAAmC,sIAFnC,CAAC,EAAC,OAAO,EAAE,kEAAmB,EAAE,WAAW,EAAE,mCAAmC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;6FAE/F,mCAAmC;cAJ/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,iCAAiC;gBAC3C,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,kEAAmB,EAAE,WAAW,qCAAqC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;aAC3G;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;ICOlC,wEACE;IAAA,wEAAsE;IAAA,+DAAI;IAAA,4DAAI;IAChF,4DAAK;;;IAIL,wEACE;IAAA,wEAA0C;IAAA,mEAAQ;IAAA,4DAAI;IACxD,4DAAK;;;IAWH,wEACE;IAAA,wEAA8B;IAAA,uDAAgC;IAAA,4DAAI;IACpE,4DAAK;;;IAD2B,0DAAgC;IAAhC,oGAAgC;;;;IAEhE,wEACE;IAAA,wEAA6D;IAAhC,qRAAS,4BAAqB,IAAC;IAAC,iEAAM;IAAA,4DAAI;IACzE,4DAAK;;;IACL,wEACE;IAAA,wEAAuC;IAAA,gEAAK;IAAA,4DAAI;IAClD,4DAAK;;;IACL,wEACE;IAAA,wEAAwC;IAAA,kEAAO;IAAA,4DAAI;IACrD,4DAAK;;AD9BR,MAAM,YAAY;IAEvB,YAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAD7C,UAAK,GAAG,gBAAgB,CAAC;IAGzB,CAAC;;wEAJU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,yEACE;QAAA,uEAAiC;QAAA,+EAAoB;QAAA,4DAAI;QACzD,4EACI;QAAA,qEAAyC;QAC7C,4DAAS;QACT,yEACI;QAAA,wEACA;QAAA,sGAEK;QACL,wEACE;QAAA,wEAAuC;QAAA,iEAAK;QAAA,4DAAI;QAClD,4DAAK;QACL,wGAEK;QACL,0EACE;QAAA,yEACE;QAAA,sEACF;QAAA,4DAAI;QACJ,0EACE;QAAA,sEAAI;QAAA,yEAAkC;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAK;QACrD,sEAAI;QAAA,yEAAkC;QAAA,0EAAc;QAAA,4DAAI;QAAA,4DAAK;QAC7D,sEAAI;QAAA,qEAA6B;QAAA,4DAAK;QACtC,sEAAI;QAAA,yEAAkC;QAAA,+EAAmB;QAAA,4DAAI;QAAA,4DAAK;QACpE,4DAAK;QATP,4DACE;QASA,wGAEK;QACL,wGAEK;QACL,wGAEK;QACL,wGAEK;QACP,yEACE;QAAA,yEAAyE;QAAA,oEAAQ;QAAA,4DAAI;QACvF,4DAAK;QACP,4DAAK;QACL,4EACE;QAAA,2EACI;QAAA,2EACI;QAAA,4EAA2C;QAAA,oEAA4B;QAAA,4DAAO;QAClF,4DAAM;QACN,wEACJ;QAAA,4DAAM;QACN,8EAA0D;QAAA,kEAAM;QAAA,4DAAS;QAC7E,4DAAO;QAEP,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EAEI;QAAA,2EACI;QAAA,2EACI;QAAA,0EAA2B;QAC/B,4DAAM;QAEN,2EACI;QAAA,4EAA+B;QACnC,4DAAM;QACV,4DAAM;QAGV,4DAAM;;QA9DwB,0DAAyC;QAAzC,0GAAyC;QAMzC,0DAAyC;QAAzC,0GAAyC;QAavC,2DAAyC;QAAzC,0GAAyC;QAGzC,0DAAyC;QAAzC,0GAAyC;QAGzC,0DAAyC;QAAzC,0GAAyC;QAGzC,0DAAyC;QAAzC,0GAAyC;;6FD5B5D,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAO,MAAM,cAAc;CAG1B;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AACzB;AACC;AACjB;AACjB;AACM;AAES;AACT;AACuB;AACnB;AACM;;;AAmClD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAdT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,sFAAqB;YAC/B,KAAK,EAAE,IAAI;SACZ;QACD;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,+GAAgC;YAC1C,KAAK,EAAE,IAAI;SACZ;KACF,YAzBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,+DAAW;YACX,4DAAS,CAAC,OAAO,CAAC;gBACf,MAAM,EAAE;oBACN,WAAW,EAAE,GAAG,EAAE;wBAChB,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC5G,CAAC;iBACF;aACH,CAAC;SACH;mIAgBU,SAAS,mBAhClB,2DAAY;QACZ,kFAAgB;QAChB,sEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,+DAAW,2EASH,kFAAgB;6FAef,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kFAAgB;oBAChB,sEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,+DAAW;oBACX,4DAAS,CAAC,OAAO,CAAC;wBACf,MAAM,EAAE;4BACN,WAAW,EAAE,GAAG,EAAE;gCAChB,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAC5G,CAAC;yBACF;qBACH,CAAC;iBACH;gBACD,OAAO,EAAE,CAAC,kFAAgB,CAAC;gBAC3B,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,sFAAqB;wBAC/B,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,+GAAgC;wBAC1C,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7CD;AAAA;AAAO,MAAM,cAAc;IAGvB;QACI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACnC,CAAC;CACJ;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAQpC,MAAM,qBAAqB;IAEhC,YAAoB,YAA0B,EAAU,MAAc,EAAU,gBAAkC;QAA9F,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAElH,CAAC;IACD,WAAW,CAAC,KAA6B;QAEvC,gCAAgC;QAChC,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/G,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,YAAY,EACpH;YACE,OAAO,IAAI,CAAC;SACb;aAED;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;0FAlBU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAoD;;AAM7C,MAAM,UAAU;IAErB,SAAS,CAAC,KAAgB,EAAE,gBAAwB,EAAE,QAAgB;QACpE,IAAI,KAAK,IAAI,IAAI,EACjB;YACE,OAAO,KAAK,CAAC;SACd;QAED,wCAAwC;QACxC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,gBAAgB,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EACpF;YACE,IAAI,KAAK,CAAC,CAAC,CAAC,EAAC;gBACX,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,WAAW,CAAC;IAErB,CAAC;;oEAlBU,UAAU;sGAAV,UAAU;6FAAV,UAAU;cAHtB,kDAAI;eAAC;gBACJ,IAAI,EAAE,QAAQ;aACf;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoH;AACjD;AAC1B;AACM;AACsB;AACE;AACd;AACS;AACA;AACT;AACkC;AACmB;AAChD;AACC;AAC4B;AAChC;AAChB;AACA;AACoB;;AA6BxD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,mBAFX,CAAE,4EAAgB,CAAE,YAPtB;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAKU,WAAW,mBAzBpB,iFAAkB;QAClB,mFAAkB;QAClB,qEAAc;QACd,8EAAiB;QACjB,qEAAc;QACd,qGAA0B;QAC1B,6HAAsC;QACtC,wHAAmC;QACnC,2EAAe;QACf,4EAAgB;QAChB,wGAAwB;QACxB,wEAAiB;QACjB,wDAAU;QACV,wDAAU;QACV,2EAAc,aAGd,4DAAY;QACZ,0DAAW;QACX,kEAAmB,aAEX,iFAAkB,EAAE,mFAAkB,EAAE,qEAAc,EAAE,8EAAiB,EAAE,qEAAc;QAC/F,qGAA0B,EAAE,6HAAsC,EAAE,2EAAc;6FAG3E,WAAW;cA3BvB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,iFAAkB;oBAClB,mFAAkB;oBAClB,qEAAc;oBACd,8EAAiB;oBACjB,qEAAc;oBACd,qGAA0B;oBAC1B,6HAAsC;oBACtC,wHAAmC;oBACnC,2EAAe;oBACf,4EAAgB;oBAChB,wGAAwB;oBACxB,wEAAiB;oBACjB,wDAAU;oBACV,wDAAU;oBACV,2EAAc;iBACf;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;gBACD,OAAO,EAAE,CAAC,iFAAkB,EAAE,mFAAkB,EAAE,qEAAc,EAAE,8EAAiB,EAAE,qEAAc;oBAC/F,qGAA0B,EAAE,6HAAsC,EAAE,2EAAc,CAAC;gBACvF,SAAS,EAAE,CAAE,4EAAgB,CAAE;aAChC;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;;6FDOX,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;IC0C9B,yEAA2D;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,0EAAU;;;;IAezD,wEAA4H;IAAlC,kUAAiC;IAAC,uDAAW;IAAA,4DAAI;;;IAAf,0DAAW;IAAX,2EAAW;;;IAUvI,wEAA6D;IAAA,uDAAQ;IAAA,4DAAI;;;IAAZ,0DAAQ;IAAR,wEAAQ;;;IAmCjF,qEACE;IAAA,qEACE;IAAA,oEAAG;IAAA,uDAA4B;IAAA,4DAAI;IACrC,4DAAK;IACL,qEAAI;IAAA,uDAAsC;IAAA,4DAAK;IAC/C,qEAAI;IAAA,uDAAkD;IAAA,4DAAK;IAC7D,4DAAK;;;IAJE,0DAA4B;IAA5B,6FAA4B;IAE7B,0DAAsC;IAAtC,uGAAsC;IACtC,0DAAkD;IAAlD,mHAAkD;;;IAiClC,qEACE;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAA0D;IAAA,uDAAe;IAAA,4DAAK;IAC9E,qEAAI;IAAA,mEAA2B;IAAC,uDAAiB;IAAA,4DAAK;IACxD,4DAAK;;;IAHC,0DAAa;IAAb,8EAAa;IACb,0DAAqD;IAArD,iHAAqD;IAAC,0DAAe;IAAf,gFAAe;IACzC,0DAAiB;IAAjB,4FAAiB;;;IArBzE,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,6EAAgH;IAAA,uDAA2B;IAAA,4DAAS;IACxJ,4DAAK;IACT,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,wEACE;IAAA,sEACE;IAAA,sEAAI;IAAA,8DAAE;IAAA,4DAAK;IACX,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACjB,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,sHAIK;IAEP,4DAAQ;IACV,4DAAQ;IACd,4DAAQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IA1BmF,0DAAkC;IAAlC,6FAAkC;IAAC,0DAA2B;IAA3B,4FAA2B;IAG9I,0DAAmB;IAAnB,kFAAmB;IAYiB,2DAA2B;IAA3B,iGAA2B;;ADrIrF,MAAM,kBAAkB;IAiB7B,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJtD,UAAK,GAAa,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QACvB,gBAAW,GAAG,EAAE,CAAC;IAIjB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;QACrF,IAAI,CAAC,QAAQ,GAAG;YACd,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;SACnD,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,CAAC;QAC1E,wCAAwC;QACpC,IAAI,CAAC,WAAW,GAAG;YACjB;gBACE,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC5C,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC9C,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;oBACxC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;iBACzC;aACF;YACD;gBACE,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC5C,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC5C,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;oBACxC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;iBAC3C;aACF;YACD;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE;oBACP,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC/C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC9C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;oBACxC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;iBAC3C;aACF;YACD;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE;oBACP,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC9C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE;oBAC9C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;oBACzC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;iBAC1C;aACF;SACF,CAAC;IAEJ,CAAC;IAED,eAAe,CAAC,MAAM;QACpB,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,WAAW,EAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;aACI,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;aACI,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aACI,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;IACH,CAAC;;oFAxGU,kBAAkB;kGAAlB,kBAAkB;QCR/B,sEACI;QAAA,wEACI;QAAA,wEAA4B;QAAA,uEAAkB;QAAA,+DAAI;QAAA,4DAAI;QAAA,4DAAK;QAC3D,wEAA4B;QAAA,oEAAS;QAAA,4DAAK;QAC9C,4DAAK;QACT,4DAAM;QACN,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,wDACJ;QAAA,4DAAM;QACN,0EACI;QAAA,qEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,wDACJ;QAAA,4DAAM;QACN,0EAAsE;QAAA,wEAAY;QAAA,4DAAM;QACxF,2EACI;QAAA,0EACI;QAAA,0EACI;QAAA,iFACA;QAAA,4EAAwE;QAAA,wDAAmB;QAAA,4DAAO;QACtG,4DAAK;QACL,0EACI;QAAA,wFACA;QAAA,4EAAwE;QAAA,wDAA8B;QAAA,4DAAO;QACjH,4DAAK;QACL,0EACI;QAAA,2EACA;QAAA,4EAAwE;QAAA,wDAAgB;QAAA,4DAAO;QACnG,4DAAK;QACL,0EACI;QAAA,+EACA;QAAA,4EAAwE;QAAA,wDAAoB;QAAA,4DAAO;QACvG,4DAAK;QACT,4DAAK;QACT,4DAAM;QACN,2EAA0C;QAAA,mEAAO;QAAA,4DAAM;QACvD,2EACI;QAAA,0EACI;QAAA,+GAA0E;QAC9E,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,8EACI;QAAA,uEACJ;QAAA,4DAAS;QACT,2EACI;QAAA,6GAA2I;QAC/I,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EACI;QAAA,kEACJ;QAAA,4DAAS;QACT,2EACI;QAAA,6GAAyE;QAC7E,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EACJ;QAAA,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,wDAAiC;;QAAA,4DAAK;QAC9C,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAC5B,sEAAI;QAAA,wDAAwC;;QAAA,4DAAK;QACrD,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,wDAAoC;;QAAA,4DAAK;QACjD,4DAAK;QACT,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,kFACJ;QAAA,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,2FAA+B;QAAA,4DAAK;QAC1C,4DAAK;QACL,+GAMK;QAEP,4DAAQ;QACd,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EACJ;QAAA,4DAAM;QACN,2EACI;QAAA,2EAEI;QAAA,kHA6BM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QApJU,2DACJ;QADI,2FACJ;QAKI,0DACJ;QADI,wFACJ;QAMoF,0DAAmB;QAAnB,8FAAmB;QAInB,0DAA8B;QAA9B,yGAA8B;QAI9B,0DAAgB;QAAhB,2FAAgB;QAIhB,0DAAoB;QAApB,+FAAoB;QAOjD,0DAAU;QAAV,gFAAU;QAeS,2DAAW;QAAX,iFAAW;QAUd,0DAAQ;QAAR,8EAAQ;QAa/D,0DAAiC;QAAjC,0JAAiC;QAIjC,0DAAwC;QAAxC,iKAAwC;QAIxC,0DAAoC;QAApC,6JAAoC;QAcV,2DAAoB;QAApB,0FAAoB;QAoBP,0DAAe;QAAf,oFAAe;;6FDnHrE,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA2C;;AAMpC,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,cAAc,CAAC,WAAW,KAAK,IAAI,EAAC;YACtC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;SACtD;QACD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACd,UAAU,EAAE;gBACV,aAAa,EAAG,QAAQ,GAAG,WAAW;aACvC;SAAC,CACH,CAAC;QAEF,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;;0FAhBU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,OAAO;IAIhB,YAAY,aAAqB,EAAE,eAAuB;QACtD,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;IACvC,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACW;AACQ;AACb;AACS;AACT;AACtB;AACc;AACoB;;;AAE3E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IAClD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,gFAAe,EAAC;IAC5C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uFAAkB,EAAE,WAAW,EAAE,CAAC,wFAAqB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,OAAO,EAAC,EAAC;IACvH,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oFAAiB,EAAE,WAAW,EAAE,CAAC,wFAAqB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,OAAO,EAAC,EAAC;IACrH,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,WAAW,EAAE,CAAC,wFAAqB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,UAAU,EAAC,EAAC;CACnH,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,EAC9C,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBACxD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"col-12 col-sm-3 col-xl-2 px-sm-2 px-0 bg-dark d-flex sticky-top\">\n    <div class=\"d-flex flex-sm-column flex-row flex-grow-1 align-items-center align-items-sm-start px-3 pt-2 text-white\">\n        <a href=\"/\" class=\"d-flex align-items-center pb-sm-3 mb-md-0 me-md-auto text-white text-decoration-none\">\n            <span class=\"fs-5\">B<span class=\"d-none d-sm-inline\">rand</span></span>\n        </a>\n        <ul class=\"nav nav-pills flex-sm-column flex-row flex-nowrap flex-shrink-1 flex-sm-grow-0 flex-grow-1 mb-sm-auto mb-0 justify-content-center align-items-center align-items-sm-start\" id=\"menu\">\n            <li class=\"nav-item\">\n                <a href=\"#\" class=\"nav-link px-sm-0 px-2\">\n                    <i class=\"fs-5 bi-house\"></i><span class=\"ms-1 d-none d-sm-inline\">Home</span>\n                </a>\n            </li>\n            <li>\n                <a href=\"#submenu1\" data-bs-toggle=\"collapse\" class=\"nav-link px-sm-0 px-2\">\n                    <i class=\"fs-5 bi-speedometer2\"></i><span class=\"ms-1 d-none d-sm-inline\">Dashboard</span> </a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"nav-link px-sm-0 px-2\">\n                    <i class=\"fs-5 bi-table\"></i><span class=\"ms-1 d-none d-sm-inline\">Orders</span></a>\n            </li>\n            <li class=\"dropdown\">\n                <a href=\"#\" class=\"nav-link dropdown-toggle px-sm-0 px-1\" id=\"dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"fs-5 bi-bootstrap\"></i><span class=\"ms-1 d-none d-sm-inline\">Bootstrap</span>\n                </a>\n                <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\" aria-labelledby=\"dropdown\">\n                    <li><a class=\"dropdown-item\" href=\"#\">New project...</a></li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Settings</a></li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Profile</a></li>\n                    <li>\n                        <hr class=\"dropdown-divider\">\n                    </li>\n                    <li><a class=\"dropdown-item\" href=\"#\">Sign out</a></li>\n                </ul>\n            </li>\n            <li>\n                <a href=\"#\" class=\"nav-link px-sm-0 px-2\">\n                    <i class=\"fs-5 bi-grid\"></i><span class=\"ms-1 d-none d-sm-inline\">Products</span></a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"nav-link px-sm-0 px-2\">\n                    <i class=\"fs-5 bi-people\"></i><span class=\"ms-1 d-none d-sm-inline\">Customers</span> </a>\n            </li>\n        </ul>\n        <div class=\"dropdown py-sm-4 mt-sm-auto ms-auto ms-sm-0 flex-shrink-1\">\n            <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <img src=\"/assets/user.png\" alt=\"hugenerd\" width=\"28\" height=\"28\" class=\"rounded-circle\">\n                <span class=\"d-none d-sm-inline mx-1\">Joe</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\" aria-labelledby=\"dropdownUser1\">\n                <li><a class=\"dropdown-item\" href=\"#\">New project...</a></li>\n                <li><a class=\"dropdown-item\" href=\"#\">Settings</a></li>\n                <li><a class=\"dropdown-item\" href=\"#\">Profile</a></li>\n                <li>\n                    <hr class=\"dropdown-divider\">\n                </li>\n                <li><a class=\"dropdown-item\" href=\"#\">Sign out</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class DashboardService {\n\n  getTeamMemberSummery(): any[]\n  {\n    const TeamMemberSummary = [\n      {Region: 'East', TeamMembersCount: 20, TemporarlyUnavailableMembers: 4},\n      {Region: 'West', TeamMembersCount: 15, TemporarlyUnavailableMembers: 8},\n      {Region: 'South', TeamMembersCount: 17, TemporarlyUnavailableMembers: 1},\n      {Region: 'North', TeamMembersCount: 15, TemporarlyUnavailableMembers: 6}\n    ];\n    return TeamMemberSummary;\n  }\n\n}\n","import { Project } from './../../models/project';\nimport { Component, Input, OnInit, EventEmitter, Output, ContentChild, SimpleChange, SimpleChanges } from '@angular/core';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Subscription } from 'rxjs';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit\n{\n  // tslint:disable-next-line:no-input-rename\n  @Input('currentProject') project: Project;\n  // tslint:disable-next-line:no-input-rename\n  @Input('recordIndex') i: number;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  MySubscription: Subscription;\n  // tslint:disable-next-line:no-inferrable-types\n  hideDetails: boolean = false;\n  constructor(public projectsService: ProjectsService) { }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnChanges(simpleChanges: SimpleChanges): void\n  {\n    // tslint:disable-next-line:no-console\n    console.info('--------ngOnChanges called');\n    // tslint:disable-next-line:forin\n    for (const propName in simpleChanges) {\n      const chng = simpleChanges[propName];\n      const cur = JSON.stringify(chng.currentValue);\n      const prev = JSON.stringify(chng.previousValue);\n      console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.MySubscription =\n    this.projectsService.MySubject.subscribe((hide) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  onEditClick(event, i): void\n  {\n    this.editClick.emit({ event , i });\n  }\n\n  onDeleteClick(event, i): void\n  {\n    this.deleteClick.emit({ event , i });\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnDestroy(): void\n  {\n    this.MySubscription.unsubscribe();\n  }\n\n  // tslint:disable-next-line:member-ordering\n  @ContentChild('selectionBox') selectionBox: CheckBoxPrinterComponent;\n  isAllCheckedChange(b: boolean): void\n  {\n    if (b){\n      this.selectionBox.check();\n    }else{\n      this.selectionBox.unCheck();\n    }\n  }\n\n}\n","<div class=\"card card-primary\">\n    <div class=\"card-header\">\n        <div class=\"row\">\n            <div class=\"col-11 pr-0 mr-0\">\n                <div>#{{project.projectCode}}</div>\n                <div>{{project.projectName}}</div>\n            </div>\n            <div class=\"col-1 pl-0 ml-0\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        \n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\n            <tr>\n                <th>Date of Start</th>\n                <td>{{project.startDate}}</td>\n            </tr>\n            <tr>\n                <th>Team Size</th>\n                <td>\n                    <span>{{project.teamSize}}</span>&nbsp;\n                    <span class=\"text-info\">{{project.teamSize | numberToWords: ' and '}}</span>\n                </td>\n            </tr>\n            <tr>\n                <th>Client Location</th>\n                <td>{{project.clientLocation.clientLocationName}}</td>\n            </tr>\n            <tr>\n                <th>Status</th>\n                <td>{{project.status}}</td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"card-footer\">\n        <!-- <button class=\"btn btn-info\"\n        data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\n        <button class=\"btn btn-warning\" \n        data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button> -->\n        <button class=\"btn btn-info\" (click)='onEditClick($event,i)'\n        data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\n        <button class=\"btn btn-warning\" (click)='onDeleteClick($event,i)'\n        data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n    </div>\n</div>\n<!-- <table class=\"table\">\n    <thead>\n        <th>Project ID</th>\n        <th>Project Name</th>\n        <th>Date Of Start</th>\n        <th>Team Size</th>\n        <th>Client Location</th>\n        <th>Status</th>\n        <th>Action</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let project of projects; let i = index\" [ngClass]=\"{'text-muted': !project.isActive}\">\n            <td>{{project.projectCode}}</td>\n            <td>{{project.projectName}}</td>\n            <td>{{project.startDate}}</td>\n            <td>{{project.teamSize}}</td>\n            <td>{{project.clientLocation.clientLocationName}}</td>\n            <td>{{project.status}}</td>\n            <td><button class=\"btn btn-info\" (click)='onEditClick($event,i)' data-toggle=\"modal\" data-target=\"#editModal\">Edit</button></td>\n        </tr>\n    </tbody>\n</table> -->\n","import { Country } from './../models/country';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor() { }\n\n  getCountries(): Country[]\n  {\n    return [\n      new Country(1, 'India'),\n      new Country(2, 'Bangladesh'),\n      new Country(3, 'UK'),\n      new Country(4, 'USA'),\n      new Country(5, 'Japan'),\n      new Country(6, 'China')\n    ];\n  }\n}\n","import { Directive } from '@angular/core';\nimport {NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true}]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator{\n\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n      let isValid = true;\n      if (control.value.ClientLocation === 5 && control.value.status === 'Support')\n      {\n        isValid = false;\n      }\n      else\n      {\n        return {clientLocationStatus: {valid: false}};\n      }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from '../models/project';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: Project[], searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    // tslint:disable-next-line:prefer-const\n    let resultArray = [];\n    // tslint:disable-next-line:no-debugger\n    debugger;\n    // tslint:disable-next-line:prefer-const\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n\n  // tslint:disable-next-line:no-inferrable-types\n  isChecked: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  check(): void\n  {\n    this.isChecked = true;\n  }\n\n  unCheck(): void{\n    this.isChecked = false;\n  }\n\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n\n  transform(value: any, separator?: string): any {\n    if (value == null){\n      return null;\n    }else{\n      return this.inWords(value, separator);\n    }\n  }\n\n  private inWords = (n, separator) =>\n  {\n    const a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    const b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    const g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = x => Array.from(x);\n    const num = x => Number(x) || 0;\n    const str = x => String(x);\n    const isEmpty = xs => xs.length === 0;\n    // tslint:disable-next-line:no-shadowed-variable\n    const take = n => xs => xs.slice(0, n);\n    // tslint:disable-next-line:no-shadowed-variable\n    const drop = n => xs => xs.slice(n);\n    const reverse = xs => xs.slice(0).reverse();\n    // tslint:disable-next-line:no-shadowed-variable\n    const comp = f => g => x => f(g(x));\n    const not = x => !x;\n    // tslint:disable-next-line:no-shadowed-variable\n    const chunk = n => xs =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    // tslint:disable-next-line:prefer-const\n    let makeGroup = ([ones, tens, huns]) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    // tslint:disable-next-line:prefer-const\n    let thousand = (group, i) => group === '' ? group : `${group} ${g[i]}`;\n\n    // tslint:disable-next-line:curly\n    if (typeof n === 'number')\n      return this.inWords(str(n), separator);\n    // tslint:disable-next-line:curly\n    else if (n === '0')\n      return 'Zero';\n    // tslint:disable-next-line:curly\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n\n}\n","import { LoginService } from './../../services/login.service';\nimport { LoginViewModel } from './../../models/login-view-model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\nloginViewModel: LoginViewModel = new LoginViewModel();\nloginError = '';\n\n  constructor(private loginService: LoginService, private router: Router)\n  {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onLoginClick(event): void\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/dashboard');\n      },\n      (error) => {\n        console.log(error);\n        this.loginError = 'Invalid Username or Password';\n      }\n    );\n  }\n\n}\n","<form>\n    <div class=\"row\">\n        <div class=\"clo-lo-6 col-xl-5 col-md-9 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header bg-secondary text-white\">\n                    <h3>Login</h3>\n                    <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-group form-row\">\n                        <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\"\n                            name=\"UserName\" autofocus=\"autofocus\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group form-row\">\n                        <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.Password\"\n                            name=\"Password\" autofocus=\"autofocus\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer text-right\">\n                    <!-- <span class=\"text-danger\">{{loginError}} &nbsp;</span> -->\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { LoginService } from './../../services/login.service';\nimport { SignUpViewModel } from './../../models/sign-up-view-model';\nimport { CustomValidatorsService } from './../../services/custom-validators.service';\nimport { Country } from './../../models/country';\nimport { CountriesService } from './../../services/countries.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validator, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit\n{\n  signUpForm: FormGroup;\n  submitted = false;\n  genders = ['male', 'female'];\n  countries: Country[] = [];\n  registerError: string = null;\n\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder, private router: Router,\n              private customValidatorsService: CustomValidatorsService, private loginService: LoginService)\n  {\n  }\n\n  ngOnInit(): void\n  {\n    this.countries = this.countriesService.getCountries();\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(2)]],\n        lastName: [null, [Validators.required, Validators.minLength(2)]],\n      }),\n      email: [null, [Validators.required, Validators.email], [ this.customValidatorsService.DuplicateEmailValidator()], {updateOn: 'blur'}],\n      mobile: [null, [Validators.required, Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n      gender: [null, [Validators.required]],\n      countryId: [null, [Validators.required]],\n      receiveNewsLetters: [null, [Validators.required]],\n      skills: this.formBuilder.array([])\n    }, {\n      validators: [\n        this.customValidatorsService.compareValidator('confirmPassword', 'password')\n      ]\n    });\n\n    this.signUpForm.valueChanges.subscribe((value) => {\n\n    });\n  }\n\n  onSubmitClick(): void\n  {\n    // tslint:disable-next-line:no-string-literal\n    this.submitted = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid){\n      const signUpViewModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpViewModel).subscribe(\n        (response) => {\n          this.router.navigate(['tasks']);\n        },\n        (error) => {\n          console.log(error);\n          this.registerError = 'Unable to submit';\n        }\n      );\n    }\n  }\n\n  onAddSkill(): void\n  {\n    const formGroup = new FormGroup({\n      skillName: new FormControl(null),\n      level: new FormControl(null)\n    });\n\n    // tslint:disable-next-line:no-angle-bracket-type-assertion\n    (<FormArray> this.signUpForm.get('skills')).push(formGroup);\n  }\n\n  onRemoveClick(index: number): void\n  {\n    // tslint:disable-next-line:no-angle-bracket-type-assertion\n    (<FormArray> this.signUpForm.get('skills')).removeAt(index);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 col-xl-6 mx-auto\">\n        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n        <div class=\"card mt-1\">\n            <div class=\"card-header\">\n                <h4>Sign Up</h4>\n            </div>\n\n            <div class=\"card-body\">\n                \n                    <div class=\"form-group form-row\" formGroupName=\"personName\">\n                        <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted),\n                        \n                        'is-valid': signUpForm.get('personName.firstName').valid &&\n                        (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted)}\">\n                    \n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty ||\n                        signUpForm.get('personName.firstName').touched || submitted) && signUpForm.get('personName.firstName').errors?.required\">\n                            First name can't be blank\n                        </span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty ||\n                        signUpForm.get('personName.firstName').touched || submitted) && signUpForm.get('personName.firstName').errors?.minlength\">\n                            First name should contain at least 2 characters\n                        </span>\n                    </div>\n                    </div>\n\n                    <div class=\"form-group form-row\" formGroupName=\"personName\">\n                        <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\"\n                            formControlName=\"lastName\" [ngClass]=\"{'is-invalid': signUpForm.get('personName.lastName').invalid &&\n                            (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted),\n                        \n                        'is-valid': signUpForm.get('personName.lastName').valid &&\n                        (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted)}\">\n                        \n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty ||\n                        signUpForm.get('personName.lastName').touched || submitted) && signUpForm.get('personName.lastName').errors?.required\">\n                            Last name can't be blank\n                        </span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.lastName').dirty ||\n                        signUpForm.get('personName.lastName').touched || submitted) && signUpForm.get('personName.lastName').errors?.minlength\">\n                            First name should contain at least 2 characters\n                        </span>\n                    </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"email\" class=\"col-md-4 col-form-label\">Email</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\"\n                            formControlName=\"email\" [ngClass]=\"{'is-invalid': signUpForm.get('email').invalid &&\n                            (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted),\n                        \n                        'is-valid': signUpForm.get('email').valid &&\n                        (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted)}\">\n                    \n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty ||\n                        signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.required\">\n                            Email can't be blank\n                        </span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty ||\n                        signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.email\">\n                            Email is invalid\n                        </span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty ||\n                        signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.uniqueEmail\">\n                            Email Already Exist\n                        </span>\n\n                    </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\"\n                            formControlName=\"mobile\" [ngClass]=\"{'is-invalid': signUpForm.get('mobile').invalid &&\n                            (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted),\n                        \n                        'is-valid': signUpForm.get('mobile').valid &&\n                        (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted)}\">\n                    \n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty ||\n                        signUpForm.get('mobile').touched || submitted) && signUpForm.get('mobile').errors?.required\">\n                            Mobile can't be blank\n                        </span>\n\n                        <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('mobile').dirty ||\n                        signUpForm.get('mobile').touched || submitted) && signUpForm.get('mobile').errors?.pattern\">\n                            Mobile is invalid\n                        </span>\n                    </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"dd/mm/yyyy\" class=\"form-control\"\n                            formControlName=\"dateOfBirth\" [ngClass]=\"{'is-invalid': signUpForm.get('dateOfBirth').invalid &&\n                            (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted),\n                        \n                            'is-valid': signUpForm.get('dateOfBirth').valid &&\n                            (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted)}\">\n                            \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty ||\n                            signUpForm.get('dateOfBirth').touched || submitted) && signUpForm.get('dateOfBirth').errors?.required\">\n                                Date of Birth can't be blank\n                            </span>\n\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty ||\n                            signUpForm.get('dateOfBirth').touched || submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">\n                                Minimum Age must be 18\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" name=\"password\" id=\"password\"  class=\"form-control\"\n                            formControlName=\"password\" [ngClass]=\"{'is-invalid': signUpForm.get('password').invalid &&\n                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || submitted),\n                        \n                            'is-valid': signUpForm.get('password').valid &&\n                            (signUpForm.get('password').dirty || signUpForm.get('password').touched || submitted)}\">\n                            \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty ||\n                            signUpForm.get('password').touched || submitted) && signUpForm.get('password').errors?.required\">\n                                Password can't be blank\n                            </span>\n\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Confirm Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\"  class=\"form-control\"\n                            formControlName=\"confirmPassword\" [ngClass]=\"{'is-invalid': signUpForm.get('confirmPassword').invalid &&\n                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted),\n                        \n                            'is-valid': signUpForm.get('confirmPassword').valid &&\n                            (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted)}\">\n                            \n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty ||\n                            signUpForm.get('confirmPassword').touched || submitted) && signUpForm.get('confirmPassword').errors?.required\">\n                                Confirm Password can't be blank\n                            </span>\n\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty ||\n                            signUpForm.touched || submitted) && signUpForm.errors?.compareValidator\">\n                               Password and Confirm Password do not match\n                            </span>\n                            \n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\">Gender</label>\n                        <div class=\"col-md-8\">\n                            \n                            <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-inline\" formControlName=\"gender\">\n                                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n                            </div>\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty ||\n                            signUpForm.get('gender').touched || submitted) && signUpForm.get('gender').errors?.required\">\n                                Please select gender\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Country</label>\n                        <div class=\"col-md-8\">\n                            <select name=\"countryId\" id=\"countryId\" class=\"form-control\" formControlName=\"countryId\" [ngClass]=\"{'is-invalid': signUpForm.get('countryId').invalid &&\n                            (signUpForm.get('countryId').dirty || signUpForm.get('countryId').touched || submitted),\n                        \n                        'is-valid': signUpForm.get('countryId').valid &&\n                        (signUpForm.get('countryId').dirty || signUpForm.get('countryId').touched || submitted)}\">\n                                <option value=\"null\">Please Select</option>\n                                <option *ngFor=\"let country of countries\" [value]=\"country.countryId\">{{country.countryName}}</option>\n                            </select>\n\n                            <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryId').invalid && (signUpForm.get('countryId').dirty ||\n                            signUpForm.get('countryId').touched || submitted) && signUpForm.get('countryId').errors?.required\">\n                                Please select country\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\"></label>\n                        <div class=\"col-md-8\">\n                            <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\"\n                            formControlName=\"receiveNewsLetters\">\n                            <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n                        </div>\n                    </div>\n                    <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\">Skills</label>\n                        <div class=\"col-md-8\" formArrayName=\"skills\">\n                            <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills')['controls']; let i = index\" [formGroupName]=\"i\">\n                                <div class=\"col-5\">\n                                    <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\"\n                                    formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{'is-invalid': skill.get('skillName').invalid &&\n                                    (skill.get('skillName').dirty || skill.get('skillName').touched || submitted),\n                                \n                                'is-valid': skill.get('skillName').valid &&\n                                (skill.get('skillName').dirty || skill.get('skillName').touched || submitted)}\"/>\n                                </div>\n                                <div class=\"col-4\">\n                                    <select name=\"level\" formControlName=\"level\" class=\"form-control\" [ngClass]=\"{'is-invalid': skill.get('level').invalid &&\n                                    (skill.get('level').dirty || skill.get('level').touched || submitted),\n                                \n                                'is-valid': skill.get('level').valid && (skill.get('level').dirty || skill.get('level').touched || submitted)}\">\n                                        <option value=\"null\">Please Select</option>\n                                        <option value=\"Beginner\">Beginner</option>\n                                        <option value=\"Intermediate\">Intermediate</option>\n                                        <option value=\"Professional\">Professional</option>\n                                        <option value=\"Expert\">Expert</option>\n                                    </select>\n                                </div>\n\n                                <div class=\"col-2\">\n                                    <button class=\"btn btn-danger btn-sm\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                                </div>\n\n                            </div>\n                            <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">\n                                Add Skill\n                            </button>\n                            <div class=\"text-danger\">{{registerError}}</div>\n                        </div>\n                        \n                        \n                    </div>\n                \n\n                {{signUpForm.value | json}}\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-success float-right\">\n                    Create Account\n                </button>\n            </div>\n        </div>\n    </form>\n    </div>\n</div>\n","import { map } from 'rxjs/operators';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, FormGroup, AsyncValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.value){\n        return null;\n      }\n\n      const today = new Date();\n      const dateOfBirth = new Date(control.value);\n      const diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      const diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge){\n        return null;\n      }else {\n        return {minAge: {valid: false}};\n      }\n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: FormGroup): ValidationErrors | null =>\n    {\n      const isValid = true;\n      if (!formGroup.get(controlToValidate).value){\n        return null;\n      }\n\n      if (formGroup.get(controlToValidate).value === formGroup.get(controlToCompare).value){\n        return null;\n      }else {\n        formGroup.get(controlToValidate).setErrors({\n          compareValidator: {valid: false}\n        });\n        return {compareValidator: {valid: false}};\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } };\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n\n  }\n\n}\n","import { ClientLocation } from './client-location';\nexport class Project {\n    Id: number;\n    projectName: string;\n    projectCode: string;\n    startDate: string;\n    teamSize: number;\n    isActive: boolean;\n    status: string;\n    clientLocationId: number;\n    clientLocation: ClientLocation;\n\n    constructor() {\n        this.Id = 0;\n        this.projectName = null;\n        this.projectCode = null;\n        this.startDate = null;\n        this.teamSize = 0;\n        this.isActive = true;\n        this.status = null;\n        this.clientLocationId = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { map } from 'rxjs/operators';\nimport { Injectable, NgModule } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { BehaviorSubject, Observable, Observer, Subject } from 'rxjs';\nimport { Project } from '../models/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  public MySubject: BehaviorSubject<boolean>;\n  constructor(private httpClient: HttpClient)\n  {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n  // tslint:disable-next-line:typedef\n  toggleDetails()\n  {\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>\n  {\n     return this.httpClient.get<Project[]>('/api/masterData/project', {responseType: 'json'})\n     .pipe(map(\n       (data: Project[]) => {\n         return data;\n       }\n     ));\n    // return this.httpClient.get<Project[]>('http://localhost:3000/projects', {responseType: 'json'});\n  }\n\n  insertProject(newProject: Project): Observable<Project>\n  {\n     return this.httpClient.post<Project>('/api/masterData/SaveProject', newProject);\n    // return this.httpClient.post<Project>('http://localhost:3000/projects', newProject, {responseType: 'json'});\n  }\n\n  updateProject(existProject: Project): Observable<Project>\n  {\n     return this.httpClient.put<Project>('api/masterData/UpdateProject', existProject);\n    // return this.httpClient.put<Project>('http://localhost:3000/projects', existProject, {responseType: 'json'});\n  }\n\n  deleteProject(projectId: number): Observable<string>\n  {\n     return this.httpClient.delete<string>('/api/masterData/DeleteProject/' + projectId);\n    // return this.httpClient.delete<string>('http://localhost:3000/projects?Id=' + projectId, {responseType: 'json'});\n  }\n\n  SearchProjects(searchBy: string, searchText: string): Observable<Project[]>\n  {\n     return this.httpClient.get<Project[]>('/api/projectss/Search/' + searchBy + '/' + searchText, {responseType: 'json'});\n    // return this.httpClient.get<Project[]>('http://localhost:3000/projects/' + searchBy + '/' + searchText, {responseType: 'json'});\n  }\n\n  getProjectByProjectCode(ProjectCode: string): Observable<Project>\n  {\n    return this.httpClient.get<Project>('/api/Projects/GetPojectInfoByCode/' + ProjectCode, {responseType: 'json'});\n  }\n\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizeInterceptorService implements HttpInterceptor{\n\n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      return next.handle(req).pipe(tap(\n        (event: HttpEvent<any>) =>\n        {\n          if (event instanceof HttpResponse){\n\n          }\n        },\n        (error: any) => {\n          if (error instanceof HttpErrorResponse){\n            if (error.status === 401){\n              console.log(error);\n              alert('401 UnAuthorized');\n            }\n          }\n        }\n      ));\n  }\n}\n","import { SignUpViewModel } from './../models/sign-up-view-model';\nimport { LoginViewModel } from './../models/login-view-model';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService\n{\n  private httpClient: HttpClient;\n  constructor(private httpBackend: HttpBackend, private jwtHelperService: JwtHelperService)\n  {\n\n  }\n\n  currentUserName: string = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>('/api/Account/Login', loginViewModel, {responseType: 'json'})\n    .pipe(map(user => {\n      if (user){\n        this.currentUserName = user.userInfo.UserName;\n        sessionStorage.currentUser = JSON.stringify(user.token);\n      }\n      return user;\n    }));\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>('/api/Account/Register', signUpViewModel, {responseType: 'json'})\n    .pipe(map(user => {\n      if (user){\n        this.currentUserName = user.userInfo.UserName;\n        sessionStorage.currentUser = JSON.stringify(user.token);\n        // sessionStorage.XSRFRequestToken = user.headers.get('XSRF-REQUEST-TOKEN');\n      }\n      return user;\n    }));\n  }\n\n  getUserByEmail(Email: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>('/api/Account/GetUserByEmail?Email=' + Email, { responseType: 'json' });\n    // return this.httpClient.get<any>('/api/Account/GetUserByEmail?Email=' + Email, {responseType: 'json'});\n  }\n\n  public Logout(): void\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    sessionStorage.removeItem('currentUser');\n    this.currentUserName = null;\n    const result = this.httpClient.post<any>('/api/Account/Logout', {responseType: 'json'});\n  }\n\n  public isAuthenticated(): boolean\n  {\n    const token = sessionStorage.getItem('currentUser') ? JSON.parse(sessionStorage.getItem('currentUser')) : null;\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n}\n","import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('error') error: string;\n  @HostBinding('title') title: string;\n\n  constructor(private elementRef: ElementRef)\n  {\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnInit(): void\n  {\n    this.elementRef.nativeElement.innerHTML = `\n    <div class=\"alert alert-danger fade show\" role=\"alert\" style=\"transition: transform 0.5s\"\n      <span>${this.error}</span>\n    </div>\n    `;\n    this.title = 'Please try again';\n  }\n\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event): void\n  {\n    this.elementRef.nativeElement.querySelector('.alert').style.transform = 'scale(1.1)';\n  }\n\n  @HostListener('mouseleave', ['$event']) onMouseLeave(event): void\n  {\n    this.elementRef.nativeElement.querySelector('.alert').style.transform = 'scale(1)';\n  }\n\n}\n","import { ProjectComponent } from './../project/project.component';\nimport { ClientLocationService } from './../../services/client-location.service';\nimport { ClientLocation } from './../../models/client-location';\nimport { ProjectsService } from './../../services/projects.service';\nimport { Component, OnInit, ViewChild, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { Project } from 'src/app/models/project';\nimport { NgForm } from '@angular/forms';\nimport * as $ from 'jquery';\nimport { FilterPipe } from '../filter.pipe';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Project[];\n  clientLocations: Observable<ClientLocation[]>;\n  showLoading = true;\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  deleteProject: Project = new Project();\n  editIndex: number = null;\n  deleteIndex: number = null;\n  searchBy = 'projectName';\n  searchText = '';\n\n  // tslint:disable-next-line:no-inferrable-types\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  // tslint:disable-next-line:no-inferrable-types\n  pageSize: number = 3;\n  // tslint:disable-next-line:no-inferrable-types\n  isAllChecked: boolean = false;\n\n  @ViewChild('newForm') newForm: NgForm;\n  @ViewChild('editForm') editForm: NgForm;\n  constructor(private projectService: ProjectsService, private clientLocationService: ClientLocationService)\n  { }\n\n  ngOnInit(): void\n  {\n    this.projectService.getAllProjects().subscribe(\n      (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      },\n      (error) => {\n        console.log(error);\n        alert('Authorization failed');\n      }\n    );\n\n    this.clientLocations = this.clientLocationService.getClientLocations();\n    // this.clientLocationService.getClientLocations().subscribe(\n    //   (response) => {\n    //     this.clientLocations = response;\n    //   }\n    // );\n  }\n\n  calculateNoOfPages(): void\n  {\n    // tslint:disable-next-line:prefer-const\n    let filterPipe = new FilterPipe();\n    const resultProjects = filterPipe.transform(this.projects, this.searchBy, this.searchText);\n    const noOfPages = Math.ceil(resultProjects.length / this.pageSize);\n\n    this.pages = [];\n    for (let i = 0; i < noOfPages; i++)\n    {\n      this.pages.push({pageIndex: i});\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  // tslint:disable-next-line:member-ordering\n  @ViewChildren('projs') projs: QueryList<ProjectComponent>;\n\n  isAllCheckedChange(event): void\n  {\n    // tslint:disable-next-line:prefer-const\n    let proj = this.projs.toArray();\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < proj.length; i++)\n    {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  // tslint:disable-next-line:member-ordering\n  @ViewChild('prjId') prjId: ElementRef;\n  onNewClick(event): void\n  {\n    this.newForm.resetForm();\n    setTimeout(() => {\n      this.prjId.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick(): void{\n    if (this.newForm.valid)\n    {\n      this.newProject.clientLocation.Id = 0;\n      this.projectService.insertProject(this.newProject).subscribe((response) => {\n        const p: Project = new Project();\n        p.Id = response.Id;\n        p.projectCode = response.projectCode;\n        p.projectName = response.projectName;\n        p.startDate = response.startDate;\n        p.teamSize = response.teamSize;\n        p.isActive = response.isActive;\n        p.status = response.status;\n        p.clientLocationId = response.clientLocationId;\n        p.clientLocation = response.clientLocation;\n\n        this.projects.push(p);\n        this.newProject.Id = null;\n        this.newProject.projectCode = null;\n        this.newProject.projectName = null;\n        this.newProject.startDate = null;\n        this.newProject.teamSize = null;\n        this.newProject.isActive = false;\n        this.newProject.status = null;\n        this.newProject.clientLocationId = null;\n\n        $('#newFormCancel').trigger('click');\n        this.calculateNoOfPages();\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n  onEditClick(event, index: number): void\n  {\n    this.editForm.resetForm();\n    this.editProject.Id = this.projects[index].Id;\n    this.editProject.projectCode = this.projects[index].projectCode;\n    this.editProject.projectName = this.projects[index].projectName;\n    this.editProject.startDate = this.projects[index].startDate;\n    this.editProject.teamSize = this.projects[index].teamSize;\n    this.editProject.isActive = this.projects[index].isActive;\n    this.editProject.status = this.projects[index].status;\n    this.editProject.clientLocationId = this.projects[index].clientLocationId;\n    this.editIndex = index;\n  }\n\n  onUpdateClick(): void\n  {\n    if (this.editForm.valid)\n    {\n      this.projectService.updateProject(this.editProject).subscribe((response: Project) =>\n      {\n        const p: Project = new Project();\n        p.Id = response.Id;\n        p.projectName = response.projectName;\n        p.startDate = response.startDate;\n        p.teamSize = response.teamSize;\n        p.projectCode = response.projectCode;\n        p.status = response.status;\n        p.isActive = response.isActive;\n        p.clientLocation = response.clientLocation;\n        this.projects[this.editIndex] = p;\n        this.editProject.Id = null;\n        this.editProject.projectCode = null;\n        this.editProject.projectName = null;\n        this.editProject.startDate = null;\n        this.editProject.teamSize = null;\n        this.editProject.isActive = false;\n        this.editProject.status = null;\n        this.editProject.clientLocationId = null;\n\n        $('#editFormCancel').trigger('click');\n      },\n       (error) =>\n       {\n        console.log(error);\n       });\n    }\n  }\n\n  onDeleteClick(event, index: number): void\n  {\n    this.deleteIndex = index;\n    this.deleteProject.Id = this.projects[index].Id;\n    this.deleteProject.projectCode = this.projects[index].projectCode;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.startDate = this.projects[index].startDate;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick(): void{\n    this.projectService.deleteProject(this.deleteProject.Id).subscribe(\n      (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.Id = null;\n        this.deleteProject.projectCode = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.startDate = null;\n        this.deleteProject.teamSize = null;\n\n        this.calculateNoOfPages();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  onSearchClick(): void\n  {\n    // this.projectService.SearchProjects(this.searchBy, this.searchText).subscribe(\n    //   (response: Project[]) => {\n    //     this.projects = response;\n    //   },\n    // (error) =>\n    // {\n    //   console.log(error);\n    // });\n  }\n\n  onSearchTextKeyup(event): void\n  {\n    this.calculateNoOfPages();\n  }\n\n  // tslint:disable-next-line:typedef\n  onHideShowDetails(event)\n  {\n    this.projectService.toggleDetails();\n  }\n\n  // tslint:disable-next-line:typedef\n  onRefresh()\n  {\n    return false;\n  }\n\n  onPageIndexClicked(pageIndex: number): void\n  {\n    this.currentPageIndex = pageIndex;\n  }\n\n}\n","<h1>\n    Project List\n    <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size: 34px;\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n    <div class=\"col-12 mx-auto\">\n        <div class=\"from-group form-row\">\n            <div class=\"col-2\">\n                <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)='onNewClick($event)'>Create Project</button>\n            </div>\n            <div class=\"col-2\">\n                <button class=\"btn btn-secondary\" (click)='onHideShowDetails($event)'>Hide/Show Details</button>\n            </div>\n            <div class=\"col-1 custom-control custom-checkbox\">\n                <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\" class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n                <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n            </div>\n\n            <label for=\"drpSearchBy\" class=\"col-form-label col-1\">Search By</label>\n            <div class=\"col-2\">\n                <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n                    <option value=\"projectCode\">Project Code</option>\n                    <option value=\"projectName\">Project Name</option>\n                    <option value=\"StartDate\">Start Date</option>\n                    <option value=\"TeamSize\">Team Size</option>\n                </select>\n            </div>\n            \n\n            <label for=\"txtSearchText\" class=\"col-form-label col-1\">Search:</label>\n\n            <div class=\"col-3\">\n                <div class=\"input-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\" (keyup)=\"onSearchTextKeyup($event)\" />\n                    <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n                        <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                    </div> -->\n                </div>\n            </div>\n\n        </div>\n        <div style=\"height: 10px;\"></div>\n    </div>\n    <!-- <div class=\"col-8 mx-auto\">\n       \n    </div> -->\n    <div class=\"col-xl-12 mx-auto\">\n        <div class=\"row\">\n            <div class=\"col-md-4 mb-1 projectcard\" *ngFor=\"let project of projects | filter: searchBy : searchText | paging: currentPageIndex: pageSize; let i=index\">\n                <app-project [currentProject]=\"project\" [recordIndex]=\"i\"\n                (editClick)='onEditClick(event, i)' (deleteClick)='onDeleteClick(event, i)'>\n                <app-check-box-printer #selectionBox></app-check-box-printer>\n                </app-project>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <ul class=\"pagination justify-content-center mt-1\">\n            <li class=\"page-item\" *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\"\n            [ngClass]=\"{'active': page.pageIndex == currentPageIndex}\">\n                <a href=\"javascript:void(0)\" class=\"page-link\">{{page.pageIndex + 1}}</a>\n            </li>\n        </ul>\n    </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n    <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header bg-primary text-white\">\n                    <div class=\"modal-title\">New Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n\n                    <div class=\"form-group row\">\n                        <label for=\"txtNewProjectCode\" class=\"col-sm-4\">Project Code</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"hidden\" id=\"txtNewProjectId\" [(ngModel)]=\"newProject.Id\" name=\"Id\" />\n                            <input [(ngModel)]=\"newProject.projectCode\" id=\"txtNewProjectCode\" name=\"projectCode\" type=\"text\" style=\"width: 150px;\" class=\"form-control\" placeholder=\"Project Code\"\n                            required=\"required\" pattern=\"^[0-9]*$\" appProjectCodeUniqueValidator #newProjectId=\"ngModel\" #prjId [ngClass]=\"{'is-invalid': newProjectId.invalid && (newProjectId.dirty || newProjectId.touched || newForm.submitted),\n                        'is-valid': newProjectId.valid && (newProjectId.dirty || newProjectId.touched || newForm.submitted)}\" />\n\n                        <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty || newProjectId.touched || newForm.submitted) && newProjectId.errors?.required\">Project Code can't be balnk</span>\n                        <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty || newProjectId.touched || newForm.submitted) && newProjectId.errors?.pattern\">Project Code Should contain number only</span>\n                        <span class=\"text-danger\" *ngIf=\"newProjectId.invalid && (newProjectId.dirty || newProjectId.touched || newForm.submitted) && newProjectId.errors?.uniqueProjectCode\">Duplicat Project Code</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"txtNewProjectName\" class=\"col-sm-4\">Project Name</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"newProject.projectName\" id=\"txtNewProjectName\" name=\"projectName\" type=\"text\" class=\"form-control\" placeholder=\"Project Name\" minlength=\"3\" maxlength=\"30\"\n                            required=\"required\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" [ngClass]=\"{'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted),\n                        'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted)}\"/>\n                        \n                        <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.required\">Project Name can't be balnk</span>\n                        <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.pattern\">Project Name can contain alphabets,digits,dot,hyphen of space only</span>\n                        <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.minlength\">Project Name should be at least 3 characters logn</span>\n                    </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"txtNewStartDate\" class=\"col-sm-4\">Date of Start</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"newProject.startDate\" id=\"txtNewStartDate\" name=\"startDate\" type=\"date\" style=\"width: 200px;\" class=\"form-control\" placeholder=\"Date of Start\" \n                            required=\"required\" #newStartDate=\"ngModel\" [ngClass]=\"{'is-invalid': newStartDate.invalid && (newStartDate.dirty || newStartDate.touched || newForm.submitted),\n                        'is-valid': newStartDate.valid && (newStartDate.dirty || newStartDate.touched || newForm.submitted)}\"/>\n\n                        <span class=\"text-danger\" *ngIf=\"newStartDate.invalid && (newStartDate.dirty || newStartDate.touched || newForm.submitted) && newStartDate.errors?.required\">Start Date can't be blank</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"txtTeamSize\" class=\"col-sm-4\">Team Size</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"newProject.teamSize\" id=\"txtTeamSize\" name=\"teamSize\" type=\"text\" style=\"width: 200px;\" class=\"form-control\" placeholder=\"Team Size\" \n                            appTeamSizeValidator=\"5\" pattern=\"^[0-9]*$\" maxlength=\"7\" #newTeamSize=\"ngModel\" [ngClass]=\"{'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted),\n                        'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted)}\"/>\n\n                        <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.maxlength\">Team Size should be a number</span>\n                        <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">Team Size should be a divisible by 5</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" name=\"isActive\" [(ngModel)]=\"newProject.isActive\">\n                                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-4 col-form-label\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"status\" [(ngModel)]=\"newProject.status\"\n                                required=\"required\" #newStatusInforce=\"ngModel\">\n                                <label class=\"form-check-label\" for=\"rbNewStatusInForce\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"status\" [(ngModel)]=\"newProject.status\"\n                                required=\"required\" #newStatusSupport=\"ngModel\">\n                                <label class=\"form-check-label\" for=\"rbNewStatusSupport\">Support</label>\n                            </div>\n\n                            <span class=\"text-danger\" *ngIf=\"newStatusInforce.invalid && (newStatusInforce.dirty || newStatusInforce.touched || newForm.submitted) && newStatusInforce.errors?.required\">Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select name=\"ClientLocation\" id=\"drpNewClientLocation\" class=\"form-control\" [(ngModel)]=\"newProject.clientLocationId\"\n                            required=\"required\" #newClientLocationId=\"ngModel\" [ngClass]=\"{'is-invalid': newClientLocationId.invalid && (newClientLocationId.dirty || newClientLocationId.touched || newForm.submitted),\n                        'is-valid': newClientLocationId.valid && (newClientLocationId.dirty || newClientLocationId.touched || newForm.submitted)}\">\n                                <option>Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations | async\" [value]=\"clientLocation.Id\">\n                                    {{clientLocation.clientLocationName}}\n                                </option>\n                            </select>\n\n                            <span class=\"text-danger\" *ngIf=\"newClientLocationId.invalid && (newClientLocationId.dirty || newClientLocationId.touched || newForm.submitted) && newClientLocationId.errors?.required\">Please select location</span>\n                            <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && newForm.errors?.clientLocationStatus\">Support projects are not allowed at mymensingh</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onSaveClick()\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n    <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Edit Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form-group row\">\n                        <label for=\"txtEditProjectCode\" class=\"col-sm-4\">Project Code</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"hidden\" id=\"txtEditProjectId\" [(ngModel)]=\"editProject.Id\" name=\"Id\" />\n                            <input [(ngModel)]=\"editProject.projectCode\" id=\"txtEditProjectCode\" name=\"projectCode\" type=\"text\" style=\"width: 150px;\" class=\"form-control-plain-text\" placeholder=\"Project Code\" disabled=\"disabled\" \n                            required=\"required\" pattern=\"^[0-9]*$\" appProjectCodeUniqueValidator #editProjectId=\"ngModel\" [ngClass]=\"{'is-invalid': editProjectId.invalid && (editProjectId.dirty || editProjectId.touched || newForm.submitted),\n                            'is-valid': editProjectId.valid && (editProjectId.dirty || editProjectId.touched || editForm.submitted)}\" />\n    \n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty || editProjectId.touched || editForm.submitted) && editProjectId.errors?.required\">Project Code can't be balnk</span>\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty || editProjectId.touched || editForm.submitted) && editProjectId.errors?.pattern\">Project Code Should contain number only</span>\n                            <span class=\"text-danger\" *ngIf=\"editProjectId.invalid && (editProjectId.dirty || editProjectId.touched || editForm.submitted) && editProjectId.errors?.uniqueProjectCode\">Duplicat Project Code</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"txtEditProjectName\" class=\"col-sm-4\">Project Name</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"editProject.projectName\" id=\"txtEditProjectName\" name=\"projectName\" type=\"text\" class=\"form-control\" placeholder=\"Project Name\" \n                            required=\"required\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" [ngClass]=\"{'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted),\n                            'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted)}\"/>\n                            \n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.required\">Project Name can't be balnk</span>\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.pattern\">Project Name can contain alphabets,digits,dot,hyphen of space only</span>\n                            <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.minlength\">Project Name should be at least 3 characters logn</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"txtEditStartDate\" class=\"col-sm-4\">Date of Start</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"editProject.startDate\" id=\"txtEditStartDate\" name=\"startDate\" type=\"date\" style=\"width: 200px;\" class=\"form-control\" placeholder=\"Date of Start\" \n                            required=\"required\" #editStartDate=\"ngModel\" [ngClass]=\"{'is-invalid': editStartDate.invalid && (editStartDate.dirty || editStartDate.touched || editForm.submitted),\n                        'is-valid': editStartDate.valid && (editStartDate.dirty || editStartDate.touched || editForm.submitted)}\"/>\n\n                        <span class=\"text-danger\" *ngIf=\"editStartDate.invalid && (editStartDate.dirty || editStartDate.touched || editForm.submitted) && editStartDate.errors?.required\">Start Date can't be blank</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"txtEditTeamSize\" class=\"col-sm-4\">Team Size</label>\n                        <div class=\"col-sm-8\">\n                            <input [(ngModel)]=\"editProject.teamSize\" id=\"txtEditTeamSize\" name=\"teamSize\" type=\"text\" style=\"width: 200px;\" class=\"form-control\" placeholder=\"Team Size\" \n                            appTeamSizeValidator=\"5\" pattern=\"^[0-9]*$\" maxlength=\"7\" #editTeamSize=\"ngModel\" [ngClass]=\"{'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted),\n                        'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted)}\"/>\n\n                        <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.maxlength\">Team Size should be a number</span>\n                        <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">Team Size should be a divisible by 5</span>\n                    </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-4 col-form-label\"></label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check\">\n                                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" name=\"isActive\" [(ngModel)]=\"editProject.isActive\">\n                                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label class=\"col-sm-4 col-form-label\">Status</label>\n                        <div class=\"col-sm-8\">\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\" #editStatusInforce=\"ngModel\">\n                                <label class=\"form-check-label\" for=\"rbEditStatusInForce\">In Force</label>\n                            </div>\n\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"status\" [(ngModel)]=\"editProject.status\"\n                                required=\"required\" #editStatusSupport=\"ngModel\">\n                                <label class=\"form-check-label\" for=\"rbEditStatusSupport\">Support</label>\n                            </div>\n                            <span class=\"text-danger\" *ngIf=\"editStatusInforce.invalid && (editStatusInforce.dirty || editStatusInforce.touched || editForm.submitted) && editStatusInforce.errors?.required\">Please select status</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <label for=\"\" class=\"col-sm-4 col-form-label\">Client Location</label>\n                        <div class=\"col-sm-8\">\n                            <select name=\"ClientLocation\" id=\"drpEditClientLocation\" class=\"form-control\" [(ngModel)]=\"editProject.clientLocationId\"\n                            required=\"required\" #editClientLocationId=\"ngModel\" [ngClass]=\"{'is-invalid': editClientLocationId.invalid && (editClientLocationId.dirty || editClientLocationId.touched || editForm.submitted),\n                        'is-valid': editClientLocationId.valid && (editClientLocationId.dirty || editClientLocationId.touched || editForm.submitted)}\">\n                                <option>Please Select</option>\n                                <option *ngFor=\"let clientLocation of clientLocations | async\" [value]=\"clientLocation.Id\">\n                                    {{clientLocation.clientLocationName}}\n                                </option>\n                            </select>\n\n                            <span class=\"text-danger\" *ngIf=\"editClientLocationId.invalid && (editClientLocationId.dirty || editClientLocationId.touched || editForm.submitted) && editClientLocationId.errors?.required\">Please select location</span>\n                            <span class=\"text-danger\" *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && editForm.errors?.clientLocationStatus\">Support projects are not allowed at mymensingh</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n                    <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onUpdateClick()\">Update</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<form>\n    <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div class=\"modal-title\">Delete Project</div>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"form-group row\">\n                        <label for=\"txtDelProjectCode\" class=\"col-sm-2\">Project Code</label>\n                        <div class=\"col-sm-10\">\n                            <input type=\"hidden\" id=\"txtDelProjectId\" [(ngModel)]=\"deleteProject.Id\" name=\"Id\" />\n                            <input [(ngModel)]=\"deleteProject.projectCode\" id=\"txtDelProjectCode\" name=\"projectCode\" type=\"text\" style=\"width: 150px;\" class=\"form-control-plain-text\" placeholder=\"Project Code\" disabled=\"disabled\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"txtDelProjectName\" class=\"col-sm-2\">Project Name</label>\n                        <div class=\"col-sm-10\">\n                            <input [(ngModel)]=\"deleteProject.projectName\" id=\"txtDelProjectName\" name=\"projectName\" type=\"text\" class=\"form-control-plain-text\" placeholder=\"Project Name\" disabled=\"disabled\" />\n                        </div>\n                    </div>\n                    \n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true}]\n})\nexport class TeamSizeValidatorDirective implements Validator{\n\n  constructor() { }\n\n  @Input('appTeamSizeValidator') n: number;\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n      const currentValue = control.value;\n      const isValid = currentValue % this.n === 0;\n\n      if (isValid)\n      {\n        return null;\n      }\n      else{\n        return {divisible: {valid: false}};\n      }\n  }\n}\n","import { ClientLocation } from './../models/client-location';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getClientLocations(): Observable<ClientLocation[]>\n  {\n    return this.httpClient.get<ClientLocation[]>('/api/ClientLocations/GetClientLocation', {responseType: 'json'});\n  }\n}\n","import { Project } from './../models/project';\nimport { map } from 'rxjs/operators';\nimport { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ProjectsService } from '../services/projects.service';\n\n@Directive({\n  selector: '[appProjectCodeUniqueValidator]',\n  providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: ProjectCodeUniqueValidatorDirective, multi: true}]\n})\nexport class ProjectCodeUniqueValidatorDirective implements AsyncValidator{\n\n  constructor(private projectService: ProjectsService) { }\n\n  validate(control: AbstractControl): Observable<ValidationErrors> | null {\n      return this.projectService.getProjectByProjectCode(control.value).pipe(map((existingProject: Project) => {\n        if (existingProject != null){\n          return {uniqueProjectCode: {valid: false}};\n        }else {\n          return null;\n        }\n      }));\n  }\n\n}\n","import { LoginService } from './services/login.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TaskManagerWeb';\n  constructor(public loginService: LoginService)\n  {\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-success\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Angular Task Manager</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!= null\">\n          <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"dashboard\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"about\">About</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!= null\">\n          <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n            <li><hr class=\"dropdown-divider\"></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n          </ul>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!= null\">\n            <a class=\"nav-link\" href=\"#\" >{{loginService.currentUserName}}</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName!= null\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName== null\">\n            <a class=\"nav-link\" routerLink=\"login\">Login</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"loginService.currentUserName== null\">\n            <a class=\"nav-link\" routerLink=\"signup\">Sign Up</a>\n          </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n        </li>\n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n            </div>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n        </div>\n        <button class=\"btn btn-warning my2-my-sm-0\" type=\"button\">Search</button>\n    </form>\n    \n    </div>\n  </div>\n</nav>\n\n<div class=\"container-fluid overflow-hidden\">\n    \n    <div class=\"row vh-100 overflow-auto\">\n        <div class=\"col-12 col-sm-3 col-xl-2 px-sm-2 px-0 bg-dark d-flex sticky-top\">\n            <app-sidebar></app-sidebar>\n        </div>\n        \n        <div class=\"col py-3\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n\n    \n</div>\n<!-- \n<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n      Angular Task Manager\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n      <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\n      <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"about\">About</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"projects\">Project</a>\n          </li>\n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n          <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n          </div>\n          <button class=\"btn btn-warning my2-my-sm-0\" type=\"button\">Search</button>\n      </form>\n  </div>\n</nav> -->\n\n<!-- <div class=\"container-fluid\">\n  \n</div> -->\n","export class LoginViewModel {\n    UserName: string;\n    Password: string;\n}\n\n","import { JwtUnAuthorizeInterceptorService } from './services/jwt-un-authorize-interceptor.service';\nimport { JWTInterceptorService } from './services/jwtinterceptor.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './navbar/sidebar/sidebar.component';\nimport { AdminModule } from './admin/admin.module';\nimport { TasksComponent } from './tasks/tasks.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AdminModule,\n    JwtModule.forRoot({\n       config: {\n         tokenGetter: () => {\n           return (sessionStorage.getItem('currentUser') ? JSON.parse(sessionStorage.getItem('currentUser')) : null);\n         }\n       }\n    })\n  ],\n  exports: [SidebarComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JWTInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizeInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ClientLocation {\n    Id: number;\n    clientLocationName: string;\n    constructor(){\n        this.Id = null;\n        this.clientLocationName = null;\n    }\n}\n","import { JwtHelperService } from '@auth0/angular-jwt';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tokenize } from '@angular/compiler/src/ml_parser/lexer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActiveGuardService implements CanActivate{\n\n  constructor(private loginService: LoginService, private router: Router, private jwtHelperService: JwtHelperService)\n  {\n  }\n  canActivate(route: ActivatedRouteSnapshot): boolean\n  {\n    // console.log(this.router.url);\n    const token = sessionStorage.getItem('currentUser') ? JSON.parse(sessionStorage.getItem('currentUser')) : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role === route.data.expectedRole)\n    {\n      return true;\n    }\n    else\n    {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from '../models/project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any {\n    if (value == null)\n    {\n      return value;\n    }\n\n    // tslint:disable-next-line:prefer-const\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i]){\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n\n  }\n}\n","import { ClientLocationStatusValidatorDirective } from './../directives/client-location-status-validator.directive';\nimport { DashboardService } from './../services/dashboard.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { AboutComponent } from './about/about.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { TeamSizeValidatorDirective } from './../directives/team-size-validator.directive';\nimport { ProjectCodeUniqueValidatorDirective } from './../directives/project-code-unique-validator.directive';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\nimport { NumberToWordsPipe } from './number-to-words.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { PagingPipe } from './paging.pipe';\nimport { AlertDirective } from '../directives/alert.directive';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    LoginComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectCodeUniqueValidatorDirective,\n    SignUpComponent,\n    ProjectComponent,\n    CheckBoxPrinterComponent,\n    NumberToWordsPipe,\n    FilterPipe,\n    PagingPipe,\n    AlertDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent, LoginComponent\n    , TeamSizeValidatorDirective, ClientLocationStatusValidatorDirective, AlertDirective],\n  providers: [ DashboardService ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-profile works!</p>\n","import { DashboardService } from './../../services/dashboard.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  Designation: string;\n  UserName: string;\n  NoOfTeamMembers: number;\n  TotalCostOfAllProjects: number;\n  PendingTasks: number;\n  UpComingProjects: number;\n  ProjectCost: number;\n  CurrentExpenditure: number;\n  AvailableFunds: number;\n  Clients: string[];\n  Projects: string[];\n  Years: number[] = [];\n  TeamMemberSummary = [];\n  TeamMembers = [];\n\n  constructor(private dashboardService: DashboardService) {\n\n  }\n\n  ngOnInit(): void {\n    this.Designation = 'Team Leader';\n    this.UserName = 'John Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.Clients = ['ABC Infotech Ltd.', 'DEF Software Solution', 'GHI Industries Ltd.'];\n    this.Projects = [\n      'Project A', 'Project B', 'Project C', 'Project D'\n    ];\n\n    for (let i = 2021; i > 2009; i--) {\n      this.Years.push(i);\n    }\n\n    this.TeamMemberSummary = this.dashboardService.getTeamMemberSummery();\n/* tslint:enable:rule1 rule2 rule3... */\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n\n  }\n\n  onProjectChange($event): void{\n    if ($event.target.innerHTML === 'Project A'){\n      this.ProjectCost = 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds = 52436;\n    }\n    else if ($event.target.innerHTML === 'Project B') {\n      this.ProjectCost = 88923;\n      this.CurrentExpenditure = 56433;\n      this.AvailableFunds = 65997;\n    }\n    else if ($event.target.innerHTML === 'Project C') {\n      this.ProjectCost = 45335;\n      this.CurrentExpenditure = 658854;\n      this.AvailableFunds = 4566;\n    }\n    else if ($event.target.innerHTML === 'Project D') {\n      this.ProjectCost = 89654;\n      this.CurrentExpenditure = 22233;\n      this.AvailableFunds = 2322;\n    }\n  }\n\n}\n","<nav>\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n        <li class=\"breadcrumb-item\">Dashboard</li>\n    </ol>\n</nav>\n<h5>Dashboard</h5>\n<div class=\"row\">\n    <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6;\">\n        <div class=\"row\">\n            <div class=\"col-11 text-white text-center mx-2 rounded pt-2 pv-2 font-weight-bold\" style=\"background-color: #a39e9e;font-family: 'Arial Narrow Bold', sans-serif;\">\n                {{Designation}}\n            </div>\n            <div class=\"col-12 text-center mt-2\">\n                <img src=\"assets/user.png\" width=\"120px\" />\n            </div>\n            <div class=\"col-12 text-center pt-2 font-weight-bold\">\n                {{UserName}}\n            </div>\n            <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial;\">TEAM SUMMARY</div>\n            <div class=\"col-12 mb-3\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        NO. OF TEAM MEMBERS \n                        <span class=\"badge rounded-pill bg-secondary\" style=\"font-size: 13px;\"> {{NoOfTeamMembers}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        TOTAL COST OF ALL PROJECTS \n                        <span class=\"badge rounded-pill bg-secondary\" style=\"font-size: 13px;\"> $ {{TotalCostOfAllProjects}} k</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        PENDING TASKS \n                        <span class=\"badge rounded-pill bg-secondary\" style=\"font-size: 13px;\"> {{PendingTasks}}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                        UPCOMING PROJECTS \n                        <span class=\"badge rounded-pill bg-secondary\" style=\"font-size: 13px;\"> {{UpComingProjects}}</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-12 text-center pt-2 bp-2\">CLIENTS</div>\n            <div class=\"col-12\">\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client}}</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6\">\n        <div class=\"row\">\n            <div class=\"col-12 pt-0 bp-2\" style=\"background-color: #e9e6e6;\">\n                <div class=\"row mt-2\">\n                    <div class=\"col-9 text-left\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownManuButton\" data-toggle=\"dropdown\">\n                                Project A\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a href=\"#\" class=\"dropdown-item\" *ngFor=\"let project of Projects\" onclick=\"return false\" (click)=\"onProjectChange($event)\">{{project}}</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-3 text-right\">\n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownManuButton\" data-toggle=\"dropdown\">\n                                2021\n                            </button>\n                            <div class=\"dropdown-menu\">\n                                <a href=\"#\" class=\"dropdown-item\" *ngFor=\"let year of Years\">{{year}}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 bp-2 rounded font-weight-bold\" style=\"background-color: #718d79;font-family: Arial Narrow;\">\n                PROJECT BRIEFING\n            </div>\n            <div class=\"col-12\">\n                <table class=\"table table-borderless\">\n                    <tr>\n                        <td>Project Cost</td>\n                        <td>{{ProjectCost | currency: \"BDT\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Current Expenditure</td>\n                        <td>{{CurrentExpenditure | currency: \"INR\"}}</td>\n                    </tr>\n                    <tr>\n                        <td>Available Funds</td>\n                        <td>{{AvailableFunds | currency: \"USD\"}}</td>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 bp-2 rounded font-weight-bold\" style=\"background-color: #718d79;font-family: Arial Narrow;\">\n                TEAM MEMBERS SUMMARY\n            </div>\n            <div class=\"col-12\">\n                <table class=\"table\">\n                    <tr>\n                      <th>Region</th>\n                      <th>Team Members Count</th>\n                      <th>Temporarily Unavailable Members</th>\n                    </tr>\n                    <tr *ngFor=\"let teamMemberSummery of TeamMemberSummary\">\n                      <td>\n                        <b>{{teamMemberSummery.Region}}</b>\n                      </td>\n                      <td>{{teamMemberSummery.TeamMembersCount}}</td>\n                      <td>{{teamMemberSummery.TemporarlyUnavailableMembers}}</td>\n                    </tr>\n                    \n                  </table>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\" style=\"background-color: #e9e6e6;\">\n        <div class=\"row\">\n            <div class=\"col-11 mx-auto mt-1 text-white text-center pt-1 bp-2 mx-2 rounded font-weight-bold\" style=\"background-color: #718d79;font-family:Arial, Narrow;\">\n                TEAM MEMBERS\n            </div>\n            <div class=\"col-lg-12 pt-2\">\n                <div class=\"accordion\" id=\"accordion1\">\n                    \n                    <div class=\"card\" *ngFor=\"let teamMembersGroup of TeamMembers;let i=index\">\n                        <div class=\"card-header bg-secondary\" id=\"card1\">\n                            <h2 class=\"mb-0\">\n                                <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\" [attr.data-target]=\"'#cardbody'+i\">{{teamMembersGroup.Region}}</button>\n                            </h2>\n                        </div>\n                        <div [id]=\"'cardbody'+i\" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i==0)?'show':''\">\n                            <div class=\"card-body\">\n                                <table class=\"table\">\n                                    <table class=\"table\">\n                                        <thead>\n                                          <tr>\n                                            <th>ID</th>\n                                            <th>Name</th>\n                                            <th>Status</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                                            <td>{{member.ID}}</td>\n                                            <td [style.color]=\"(member.Status=='Busy')?'red':'black'\">{{member.Name}}</td>\n                                            <td><i class=\"fa fa-phone\"></i> {{member.Status}}</td>\n                                          </tr>\n                                          \n                                        </tbody>\n                                      </table>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                  \n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTInterceptorService implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let currentUser = '';\n    if (sessionStorage.currentUser !== null){\n      currentUser = JSON.parse(sessionStorage.currentUser);\n    }\n    req = req.clone({\n      setHeaders: {\n        Authorization : 'Bearer' + currentUser\n      }}\n    );\n\n    return next.handle(req);\n  }\n}\n","export class Country {\n    countryId: number;\n    countryName: string;\n\n    constructor(coutryIdParam: number, coutryNameParam: string){\n        this.countryId = coutryIdParam;\n        this.countryName = coutryNameParam;\n    }\n}\n","import { TasksComponent } from './tasks/tasks.component';\nimport { SignUpComponent } from './admin/sign-up/sign-up.component';\nimport { CanActiveGuardService } from './services/can-active-guard.service';\nimport { LoginComponent } from './admin/login/login.component';\nimport { ProjectsComponent } from './admin/projects/projects.component';\nimport { AboutComponent } from './admin/about/about.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignUpComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [CanActiveGuardService], data: {expectedRole: 'admin'}},\n  {path: 'about', component: AboutComponent},\n  {path: 'projects', component: ProjectsComponent, canActivate: [CanActiveGuardService], data: {expectedRole: 'admin'}},\n  {path: 'tasks', component: TasksComponent, canActivate: [CanActiveGuardService], data: {expectedRole: 'employee'}}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}